{
    "docs": [
        {
            "location": "/",
            "text": "Ubuntu snap \u4f7f\u7528\u7b46\u8a18\n\n\n\u9019\u662f\u4f7f\u7528\u300cUbuntu \nsnap\n\u300d\u7684\u7c21\u55ae\u7d00\u9304\u3002\n\n\n\u74b0\u5883\n\n\n\n\nXubuntu 16.04 64\u4f4d\u5143",
            "title": "\u9996\u9801"
        },
        {
            "location": "/#ubuntu-snap",
            "text": "\u9019\u662f\u4f7f\u7528\u300cUbuntu  snap \u300d\u7684\u7c21\u55ae\u7d00\u9304\u3002",
            "title": "Ubuntu snap \u4f7f\u7528\u7b46\u8a18"
        },
        {
            "location": "/#_1",
            "text": "Xubuntu 16.04 64\u4f4d\u5143",
            "title": "\u74b0\u5883"
        },
        {
            "location": "/content/referance/manual/",
            "text": "manual\n\n\n\u95b1\u8b80\u6587\u4ef6\n\n\n\n\n$ man 1 snap",
            "title": "manual"
        },
        {
            "location": "/content/referance/manual/#manual",
            "text": "",
            "title": "manual"
        },
        {
            "location": "/content/referance/manual/#_1",
            "text": "$ man 1 snap",
            "title": "\u95b1\u8b80\u6587\u4ef6"
        },
        {
            "location": "/content/deb-package/",
            "text": "deb package\n\n\n\u5957\u4ef6\u9023\u7d50\n\n\n\n\nsanpd",
            "title": "index"
        },
        {
            "location": "/content/deb-package/#deb-package",
            "text": "",
            "title": "deb package"
        },
        {
            "location": "/content/deb-package/#_1",
            "text": "sanpd",
            "title": "\u5957\u4ef6\u9023\u7d50"
        },
        {
            "location": "/content/deb-package/snapd/",
            "text": "snapd \u5957\u4ef6\u63a2\u7d22\n\n\n\u4e0b\u8f09\u5957\u4ef6\n\n\n\u4e0b\u8f09\u300c\nsnapd\n\u300d\u9019\u500b\u5957\u4ef6\u3002\n\n\n$ apt download snapd\n\n\n\n\n\u89e3\u958b\u5957\u4ef6\n\n\n\u89e3\u958b\u300csnapd_2.0.2_amd64.deb\u300d\n\n\n$ dpkg -x snapd_2.0.2_amd64.deb snapd\n\n\n\n\n\u89c0\u770b\u8cc7\u6599\u593e\u7d50\u69cb\n\n\n\u57f7\u884c\n\n\n$ tree snapd\n\n\n\n\n\u986f\u793a\n\n\nsnapd\n\u251c\u2500\u2500 etc\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 ld.so.conf.d\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 snappy.conf\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 profile.d\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 apps-bin-path.sh\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 X11\n\u2502\u00a0\u00a0     \u2514\u2500\u2500 Xsession.d\n\u2502\u00a0\u00a0         \u2514\u2500\u2500 65snappy\n\u251c\u2500\u2500 lib\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 systemd\n\u2502\u00a0\u00a0     \u2514\u2500\u2500 system\n\u2502\u00a0\u00a0         \u251c\u2500\u2500 snapd.frameworks-pre.target\n\u2502\u00a0\u00a0         \u251c\u2500\u2500 snapd.frameworks.target\n\u2502\u00a0\u00a0         \u251c\u2500\u2500 snapd.service\n\u2502\u00a0\u00a0         \u251c\u2500\u2500 snapd.socket\n\u2502\u00a0\u00a0         \u251c\u2500\u2500 snappy-autopilot.service\n\u2502\u00a0\u00a0         \u2514\u2500\u2500 snappy-autopilot.timer\n\u251c\u2500\u2500 snap\n\u251c\u2500\u2500 usr\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 bin\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 snap\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 lib\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 snapd\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u2514\u2500\u2500 snapd\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 share\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 bash-completion\n\u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u2514\u2500\u2500 completions\n\u2502\u00a0\u00a0     \u2502\u00a0\u00a0     \u2514\u2500\u2500 snappy\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 doc\n\u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u2514\u2500\u2500 snapd\n\u2502\u00a0\u00a0     \u2502\u00a0\u00a0     \u251c\u2500\u2500 changelog.gz\n\u2502\u00a0\u00a0     \u2502\u00a0\u00a0     \u2514\u2500\u2500 copyright\n\u2502\u00a0\u00a0     \u2514\u2500\u2500 man\n\u2502\u00a0\u00a0         \u2514\u2500\u2500 man1\n\u2502\u00a0\u00a0             \u2514\u2500\u2500 snap.1.gz\n\u2514\u2500\u2500 var\n    \u251c\u2500\u2500 lib\n    \u2502\u00a0\u00a0 \u2514\u2500\u2500 snapd\n    \u2502\u00a0\u00a0     \u251c\u2500\u2500 apparmor\n    \u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u2514\u2500\u2500 additional\n    \u2502\u00a0\u00a0     \u251c\u2500\u2500 lib\n    \u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u2514\u2500\u2500 gl\n    \u2502\u00a0\u00a0     \u2514\u2500\u2500 snaps\n    \u2514\u2500\u2500 snap\n\n29 directories, 15 files\n\n\n\n\n\u82e5\u6709\u5b89\u88dd\u9019\u500b\u5957\u4ef6\u7684\u8a71\uff0c\u53ef\u57f7\u884c\n\n\n$ dpkg -L snapd\n\n\n\n\n\u986f\u793a\n\n\n/.\n/etc\n/etc/profile.d\n/etc/profile.d/apps-bin-path.sh\n/etc/X11\n/etc/X11/Xsession.d\n/etc/X11/Xsession.d/65snappy\n/etc/ld.so.conf.d\n/etc/ld.so.conf.d/snappy.conf\n/lib\n/lib/systemd\n/lib/systemd/system\n/lib/systemd/system/snapd.service\n/lib/systemd/system/snappy-autopilot.timer\n/lib/systemd/system/snapd.frameworks.target\n/lib/systemd/system/snappy-autopilot.service\n/lib/systemd/system/snapd.socket\n/lib/systemd/system/snapd.frameworks-pre.target\n/var\n/var/lib\n/var/lib/snapd\n/var/lib/snapd/lib\n/var/lib/snapd/lib/gl\n/var/lib/snapd/snaps\n/var/lib/snapd/apparmor\n/var/lib/snapd/apparmor/additional\n/var/snap\n/snap\n/usr\n/usr/bin\n/usr/bin/snap\n/usr/lib\n/usr/lib/snapd\n/usr/lib/snapd/snapd\n/usr/share\n/usr/share/bash-completion\n/usr/share/bash-completion/completions\n/usr/share/bash-completion/completions/snappy\n/usr/share/doc\n/usr/share/doc/snapd\n/usr/share/doc/snapd/changelog.gz\n/usr/share/doc/snapd/copyright\n/usr/share/man\n/usr/share/man/man1\n/usr/share/man/man1/snap.1.gz\n\n\n\n\nmanpage\n\n\n\u986f\u793a\n\n\n$ dpkg -L snapd | grep '/man/man.*/'\n\n\n\n\n/usr/share/man/man1/snap.1.gz\n\n\n\n\n\n\n$ man 1 snap\n\n\n\n\n\u63a2\u7d22 /etc/profile.d/apps-bin-path.sh\n\n\n\u57f7\u884c\n\n\n$ cat /etc/profile.d/apps-bin-path.sh\n\n\n\n\n\u986f\u793a\n\n\n# Expand the $PATH to include /snaps/bin which is what snappy applications\n# use\nPATH=$PATH:/snap/bin\n\n\n\n\n\u63a2\u7d22 /etc/X11/Xsession.d/65snappy\n\n\n\u57f7\u884c\n\n\n$ cat /etc/X11/Xsession.d/65snappy\n\n\n\n\n\u986f\u793a\n\n\n# This file is sourced by Xsession(5), not executed.\n# Add additionnal the additonal snappy desktop path\n\nXDG_DATA_DIRS=$XDG_DATA_DIRS:/var/lib/snapd/desktop\nexport XDG_DATA_DIRS\n\n\n\n\n\u63a2\u7d22 /etc/ld.so.conf.d/snappy.conf\n\n\n\u57f7\u884c\n\n\n$ cat /etc/ld.so.conf.d/snappy.conf\n\n\n\n\n\u986f\u793a\n\n\n# snappy looks for additional gl drivers here\n/var/lib/snapd/lib/gl\n\n\n\n\n\u63a2\u7d22 /lib/systemd/system/snapd.service\n\n\n\u57f7\u884c\n\n\n$ cat /lib/systemd/system/snapd.service\n\n\n\n\n\u986f\u793a\n\n\n[Unit]\nDescription=Snappy daemon\n#FIXME: snappy on ubuntu does not have a snapd.firstboot snap installed\n#After=snapd.firstboot.service\nBefore=snapd.frameworks-pre.target\nRequires=snapd.socket\n\n[Service]\nExecStart=/usr/lib/snapd/snapd\n\n\n\n\n\u57f7\u884c\n\n\n$ ps aux | grep snapd\n\n\n\n\n\u986f\u793a\n\n\nroot      6497  0.0  0.1 453508  5996 ?        Ssl  Apr25   0:02 /usr/lib/snapd/snapd\n...\u7565...\n\n\n\n\n\u57f7\u884c\n\n\n$ systemctl status snapd.service\n\n\n\n\n\u986f\u793a\n\n\n\u25cf snapd.service - Snappy daemon\n   Loaded: loaded (/lib/systemd/system/snapd.service; static; vendor preset: enabled)\n   Active: active (running) since Mon 2016-04-25 22:28:40 CST; 3h 32min ago\n Main PID: 6497 (snapd)\n    Tasks: 12 (limit: 512)\n   CGroup: /system.slice/snapd.service\n           \u2514\u25006497 /usr/lib/snapd/snapd\n\n...\u7565...\n\n\n\n\n\u4e0b\u8f09 Source Package\n\n\n\u57f7\u884c\n\n\n$ apt source snapd\n\n\n\n\n\u6703\u4e0b\u8f09\u300c\nsnapd\n\u300d\u9019\u500b\u300cSource Package\u300d\n\n\n\u5957\u4ef6\u8cc7\u8a0a\n\n\n\u7db2\u5740: \nhttp://packages.ubuntu.com/xenial/snapd\n\n\n\u57f7\u884c\n\n\n$ apt show snapd\n\n\n\n\n\u986f\u793a\n\n\nPackage: snapd\nVersion: 2.0.2\nBuilt-Using: golang-1.6 (= 1.6.1-0ubuntu1), golang-check.v1 (= 0.0+git20150729.11d3bc7-2), golang-defaults (= 2:1.6-1ubuntu4), golang-github-coreos-go-systemd (= 3-2), golang-github-gorilla-mux (= 0.0~git20150814.0.f7b6aaa-1), golang-github-gosexy-gettext (= 0~git20130221-0ubuntu6), golang-github-mvo5-goconfigparser (= 0.2.1-0ubuntu1), golang-github-mvo5-uboot-go (= 0~3.git69978a3-0ubuntu5), golang-github-peterh-liner (= 0.0~git20151118.0.4d47685-1), golang-go-flags (= 0.0~git20160302-0ubuntu1), golang-go.crypto (= 1:0.0~git20151201.0.7b85b09-2), golang-gopkg-tomb.v2 (= 0.0~git20140626.14b3d72-1), golang-pb (= 0.0~git20131219-1), golang-pty (= 0.0~git20150511.1.5cf931e-1ubuntu1), golang-websocket (= 0.0~git20150811.0.b6ab76f-1), golang-yaml.v2 (= 0.0+git20160301.0.a83829b-1)\nPriority: optional\nSection: devel\nOrigin: Ubuntu\nMaintainer: Ubuntu Developers \nubuntu-devel-discuss@lists.ubuntu.com\n\nBugs: https://bugs.launchpad.net/ubuntu/+filebug\nInstalled-Size: 19.0 MB\nDepends: init-system-helpers (\n= 1.18~), libc6 (\n= 2.4), adduser, lsb-release, squashfs-tools, ubuntu-core-launcher (\n= 1.0.23)\nConflicts: snap (\n 2013-11-29-1ubuntu1), snappy\nBreaks: ubuntu-snappy (\n 1.9), ubuntu-snappy-cli (\n 1.9)\nReplaces: ubuntu-snappy (\n 1.9), ubuntu-snappy-cli (\n 1.9)\nHomepage: https://github.com/ubuntu-core/snappy\nTask: ubuntu-core, ubuntu-desktop, ubuntu-usb, cloud-image, server, kubuntu-desktop, ubuntu-core, edubuntu-desktop, edubuntu-usb, xubuntu-core, xubuntu-desktop, mythbuntu-desktop, lubuntu-core, ubuntustudio-desktop-core, ubuntustudio-desktop, ubuntu-gnome-desktop, ubuntukylin-desktop, ubuntu-mate-core, ubuntu-mate-desktop, ubuntu-mate-cloudtop\nSupported: 5y\nDownload-Size: 4,011 kB\nAPT-Manual-Installed: yes\nAPT-Sources: http://tw.archive.ubuntu.com/ubuntu xenial/main amd64 Packages\nDescription: Tool to interact with Ubuntu Core Snappy.\n Manage an Ubuntu system with snappy.\n\n\n\n\n\u6e90\u78bc\u5957\u4ef6\u8cc7\u8a0a\n\n\n\u7db2\u5740: \nhttp://packages.ubuntu.com/source/xenial/snapd\n\n\n\u57f7\u884c\n\n\n$ apt showsrc snapd\n\n\n\n\n\u986f\u793a\n\n\nPackage: snapd\nBinary: golang-github-ubuntu-core-snappy-dev, snapd, ubuntu-core-snapd-units, ubuntu-snappy, ubuntu-snappy-cli\nVersion: 2.0.2\nPriority: optional\nSection: devel\nMaintainer: Ubuntu Developers \nubuntu-devel-discuss@lists.ubuntu.com\n\nBuild-Depends: bash-completion, debhelper (\n= 9), dh-golang, dh-systemd, fakeroot, gettext, golang-check.v1-dev, golang-go, golang-go-flags-dev, golang-go.crypto-dev, golang-github-coreos-go-systemd-dev, golang-github-gorilla-mux-dev, golang-github-gosexy-gettext-dev, golang-github-mvo5-goconfigparser-dev, golang-github-peterh-liner-dev, golang-pb-dev, golang-pty-dev, golang-github-mvo5-uboot-go-dev, golang-yaml.v2-dev, golang-gopkg-tomb.v2-dev, golang-websocket-dev, lsb-release, python3, python3-markdown, squashfs-tools\nArchitecture: any all\nStandards-Version: 3.9.7\nFormat: 3.0 (native)\nDirectory: pool/main/s/snapd\nFiles:\n d60c2874af681a6831163d2d87c65381 2370 snapd_2.0.2.dsc\n 36f4ddeeffd919e28011147ffb93f3fd 338240 snapd_2.0.2.tar.xz\nHomepage: https://github.com/ubuntu-core/snappy\nVcs-Browser: https://github.com/ubuntu-core/snappy\nVcs-Git: https://github.com/ubuntu-core/snappy.git\nTestsuite: autopkgtest\nPackage-List:\n golang-github-ubuntu-core-snappy-dev deb devel optional arch=all\n snapd deb devel optional arch=any\n ubuntu-core-snapd-units deb devel optional arch=any\n ubuntu-snappy deb oldlibs optional arch=all\n ubuntu-snappy-cli deb oldlibs optional arch=all\nChecksums-Sha1:\n 6fc4d0f8983091f23e426c14522f5503416a252c 2370 snapd_2.0.2.dsc\n dd3e399389e927415d4c9ace4ad055e3eab6834a 338240 snapd_2.0.2.tar.xz\nChecksums-Sha256:\n 092d09614cabcd2ea68c02e6f075d37c05014a702c53d275c6e6befc65f27f49 2370 snapd_2.0.2.dsc\n 8725ec5331ace71d1aeb2d9b2ebc2105ff29e9db6dd9890c94ccb7b2382b63c9 338240 snapd_2.0.2.tar.xz",
            "title": "snapd"
        },
        {
            "location": "/content/deb-package/snapd/#snapd",
            "text": "",
            "title": "snapd \u5957\u4ef6\u63a2\u7d22"
        },
        {
            "location": "/content/deb-package/snapd/#_1",
            "text": "\u4e0b\u8f09\u300c snapd \u300d\u9019\u500b\u5957\u4ef6\u3002  $ apt download snapd",
            "title": "\u4e0b\u8f09\u5957\u4ef6"
        },
        {
            "location": "/content/deb-package/snapd/#_2",
            "text": "\u89e3\u958b\u300csnapd_2.0.2_amd64.deb\u300d  $ dpkg -x snapd_2.0.2_amd64.deb snapd",
            "title": "\u89e3\u958b\u5957\u4ef6"
        },
        {
            "location": "/content/deb-package/snapd/#_3",
            "text": "\u57f7\u884c  $ tree snapd  \u986f\u793a  snapd\n\u251c\u2500\u2500 etc\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 ld.so.conf.d\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 snappy.conf\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 profile.d\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 apps-bin-path.sh\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 X11\n\u2502\u00a0\u00a0     \u2514\u2500\u2500 Xsession.d\n\u2502\u00a0\u00a0         \u2514\u2500\u2500 65snappy\n\u251c\u2500\u2500 lib\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 systemd\n\u2502\u00a0\u00a0     \u2514\u2500\u2500 system\n\u2502\u00a0\u00a0         \u251c\u2500\u2500 snapd.frameworks-pre.target\n\u2502\u00a0\u00a0         \u251c\u2500\u2500 snapd.frameworks.target\n\u2502\u00a0\u00a0         \u251c\u2500\u2500 snapd.service\n\u2502\u00a0\u00a0         \u251c\u2500\u2500 snapd.socket\n\u2502\u00a0\u00a0         \u251c\u2500\u2500 snappy-autopilot.service\n\u2502\u00a0\u00a0         \u2514\u2500\u2500 snappy-autopilot.timer\n\u251c\u2500\u2500 snap\n\u251c\u2500\u2500 usr\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 bin\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 snap\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 lib\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 snapd\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u2514\u2500\u2500 snapd\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 share\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 bash-completion\n\u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u2514\u2500\u2500 completions\n\u2502\u00a0\u00a0     \u2502\u00a0\u00a0     \u2514\u2500\u2500 snappy\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 doc\n\u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u2514\u2500\u2500 snapd\n\u2502\u00a0\u00a0     \u2502\u00a0\u00a0     \u251c\u2500\u2500 changelog.gz\n\u2502\u00a0\u00a0     \u2502\u00a0\u00a0     \u2514\u2500\u2500 copyright\n\u2502\u00a0\u00a0     \u2514\u2500\u2500 man\n\u2502\u00a0\u00a0         \u2514\u2500\u2500 man1\n\u2502\u00a0\u00a0             \u2514\u2500\u2500 snap.1.gz\n\u2514\u2500\u2500 var\n    \u251c\u2500\u2500 lib\n    \u2502\u00a0\u00a0 \u2514\u2500\u2500 snapd\n    \u2502\u00a0\u00a0     \u251c\u2500\u2500 apparmor\n    \u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u2514\u2500\u2500 additional\n    \u2502\u00a0\u00a0     \u251c\u2500\u2500 lib\n    \u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u2514\u2500\u2500 gl\n    \u2502\u00a0\u00a0     \u2514\u2500\u2500 snaps\n    \u2514\u2500\u2500 snap\n\n29 directories, 15 files  \u82e5\u6709\u5b89\u88dd\u9019\u500b\u5957\u4ef6\u7684\u8a71\uff0c\u53ef\u57f7\u884c  $ dpkg -L snapd  \u986f\u793a  /.\n/etc\n/etc/profile.d\n/etc/profile.d/apps-bin-path.sh\n/etc/X11\n/etc/X11/Xsession.d\n/etc/X11/Xsession.d/65snappy\n/etc/ld.so.conf.d\n/etc/ld.so.conf.d/snappy.conf\n/lib\n/lib/systemd\n/lib/systemd/system\n/lib/systemd/system/snapd.service\n/lib/systemd/system/snappy-autopilot.timer\n/lib/systemd/system/snapd.frameworks.target\n/lib/systemd/system/snappy-autopilot.service\n/lib/systemd/system/snapd.socket\n/lib/systemd/system/snapd.frameworks-pre.target\n/var\n/var/lib\n/var/lib/snapd\n/var/lib/snapd/lib\n/var/lib/snapd/lib/gl\n/var/lib/snapd/snaps\n/var/lib/snapd/apparmor\n/var/lib/snapd/apparmor/additional\n/var/snap\n/snap\n/usr\n/usr/bin\n/usr/bin/snap\n/usr/lib\n/usr/lib/snapd\n/usr/lib/snapd/snapd\n/usr/share\n/usr/share/bash-completion\n/usr/share/bash-completion/completions\n/usr/share/bash-completion/completions/snappy\n/usr/share/doc\n/usr/share/doc/snapd\n/usr/share/doc/snapd/changelog.gz\n/usr/share/doc/snapd/copyright\n/usr/share/man\n/usr/share/man/man1\n/usr/share/man/man1/snap.1.gz",
            "title": "\u89c0\u770b\u8cc7\u6599\u593e\u7d50\u69cb"
        },
        {
            "location": "/content/deb-package/snapd/#manpage",
            "text": "\u986f\u793a  $ dpkg -L snapd | grep '/man/man.*/'  /usr/share/man/man1/snap.1.gz   $ man 1 snap",
            "title": "manpage"
        },
        {
            "location": "/content/deb-package/snapd/#etcprofiledapps-bin-pathsh",
            "text": "\u57f7\u884c  $ cat /etc/profile.d/apps-bin-path.sh  \u986f\u793a  # Expand the $PATH to include /snaps/bin which is what snappy applications\n# use\nPATH=$PATH:/snap/bin",
            "title": "\u63a2\u7d22 /etc/profile.d/apps-bin-path.sh"
        },
        {
            "location": "/content/deb-package/snapd/#etcx11xsessiond65snappy",
            "text": "\u57f7\u884c  $ cat /etc/X11/Xsession.d/65snappy  \u986f\u793a  # This file is sourced by Xsession(5), not executed.\n# Add additionnal the additonal snappy desktop path\n\nXDG_DATA_DIRS=$XDG_DATA_DIRS:/var/lib/snapd/desktop\nexport XDG_DATA_DIRS",
            "title": "\u63a2\u7d22 /etc/X11/Xsession.d/65snappy"
        },
        {
            "location": "/content/deb-package/snapd/#etcldsoconfdsnappyconf",
            "text": "\u57f7\u884c  $ cat /etc/ld.so.conf.d/snappy.conf  \u986f\u793a  # snappy looks for additional gl drivers here\n/var/lib/snapd/lib/gl",
            "title": "\u63a2\u7d22 /etc/ld.so.conf.d/snappy.conf"
        },
        {
            "location": "/content/deb-package/snapd/#libsystemdsystemsnapdservice",
            "text": "\u57f7\u884c  $ cat /lib/systemd/system/snapd.service  \u986f\u793a  [Unit]\nDescription=Snappy daemon\n#FIXME: snappy on ubuntu does not have a snapd.firstboot snap installed\n#After=snapd.firstboot.service\nBefore=snapd.frameworks-pre.target\nRequires=snapd.socket\n\n[Service]\nExecStart=/usr/lib/snapd/snapd  \u57f7\u884c  $ ps aux | grep snapd  \u986f\u793a  root      6497  0.0  0.1 453508  5996 ?        Ssl  Apr25   0:02 /usr/lib/snapd/snapd\n...\u7565...  \u57f7\u884c  $ systemctl status snapd.service  \u986f\u793a  \u25cf snapd.service - Snappy daemon\n   Loaded: loaded (/lib/systemd/system/snapd.service; static; vendor preset: enabled)\n   Active: active (running) since Mon 2016-04-25 22:28:40 CST; 3h 32min ago\n Main PID: 6497 (snapd)\n    Tasks: 12 (limit: 512)\n   CGroup: /system.slice/snapd.service\n           \u2514\u25006497 /usr/lib/snapd/snapd\n\n...\u7565...",
            "title": "\u63a2\u7d22 /lib/systemd/system/snapd.service"
        },
        {
            "location": "/content/deb-package/snapd/#source-package",
            "text": "\u57f7\u884c  $ apt source snapd  \u6703\u4e0b\u8f09\u300c snapd \u300d\u9019\u500b\u300cSource Package\u300d",
            "title": "\u4e0b\u8f09 Source Package"
        },
        {
            "location": "/content/deb-package/snapd/#_4",
            "text": "\u7db2\u5740:  http://packages.ubuntu.com/xenial/snapd  \u57f7\u884c  $ apt show snapd  \u986f\u793a  Package: snapd\nVersion: 2.0.2\nBuilt-Using: golang-1.6 (= 1.6.1-0ubuntu1), golang-check.v1 (= 0.0+git20150729.11d3bc7-2), golang-defaults (= 2:1.6-1ubuntu4), golang-github-coreos-go-systemd (= 3-2), golang-github-gorilla-mux (= 0.0~git20150814.0.f7b6aaa-1), golang-github-gosexy-gettext (= 0~git20130221-0ubuntu6), golang-github-mvo5-goconfigparser (= 0.2.1-0ubuntu1), golang-github-mvo5-uboot-go (= 0~3.git69978a3-0ubuntu5), golang-github-peterh-liner (= 0.0~git20151118.0.4d47685-1), golang-go-flags (= 0.0~git20160302-0ubuntu1), golang-go.crypto (= 1:0.0~git20151201.0.7b85b09-2), golang-gopkg-tomb.v2 (= 0.0~git20140626.14b3d72-1), golang-pb (= 0.0~git20131219-1), golang-pty (= 0.0~git20150511.1.5cf931e-1ubuntu1), golang-websocket (= 0.0~git20150811.0.b6ab76f-1), golang-yaml.v2 (= 0.0+git20160301.0.a83829b-1)\nPriority: optional\nSection: devel\nOrigin: Ubuntu\nMaintainer: Ubuntu Developers  ubuntu-devel-discuss@lists.ubuntu.com \nBugs: https://bugs.launchpad.net/ubuntu/+filebug\nInstalled-Size: 19.0 MB\nDepends: init-system-helpers ( = 1.18~), libc6 ( = 2.4), adduser, lsb-release, squashfs-tools, ubuntu-core-launcher ( = 1.0.23)\nConflicts: snap (  2013-11-29-1ubuntu1), snappy\nBreaks: ubuntu-snappy (  1.9), ubuntu-snappy-cli (  1.9)\nReplaces: ubuntu-snappy (  1.9), ubuntu-snappy-cli (  1.9)\nHomepage: https://github.com/ubuntu-core/snappy\nTask: ubuntu-core, ubuntu-desktop, ubuntu-usb, cloud-image, server, kubuntu-desktop, ubuntu-core, edubuntu-desktop, edubuntu-usb, xubuntu-core, xubuntu-desktop, mythbuntu-desktop, lubuntu-core, ubuntustudio-desktop-core, ubuntustudio-desktop, ubuntu-gnome-desktop, ubuntukylin-desktop, ubuntu-mate-core, ubuntu-mate-desktop, ubuntu-mate-cloudtop\nSupported: 5y\nDownload-Size: 4,011 kB\nAPT-Manual-Installed: yes\nAPT-Sources: http://tw.archive.ubuntu.com/ubuntu xenial/main amd64 Packages\nDescription: Tool to interact with Ubuntu Core Snappy.\n Manage an Ubuntu system with snappy.",
            "title": "\u5957\u4ef6\u8cc7\u8a0a"
        },
        {
            "location": "/content/deb-package/snapd/#_5",
            "text": "\u7db2\u5740:  http://packages.ubuntu.com/source/xenial/snapd  \u57f7\u884c  $ apt showsrc snapd  \u986f\u793a  Package: snapd\nBinary: golang-github-ubuntu-core-snappy-dev, snapd, ubuntu-core-snapd-units, ubuntu-snappy, ubuntu-snappy-cli\nVersion: 2.0.2\nPriority: optional\nSection: devel\nMaintainer: Ubuntu Developers  ubuntu-devel-discuss@lists.ubuntu.com \nBuild-Depends: bash-completion, debhelper ( = 9), dh-golang, dh-systemd, fakeroot, gettext, golang-check.v1-dev, golang-go, golang-go-flags-dev, golang-go.crypto-dev, golang-github-coreos-go-systemd-dev, golang-github-gorilla-mux-dev, golang-github-gosexy-gettext-dev, golang-github-mvo5-goconfigparser-dev, golang-github-peterh-liner-dev, golang-pb-dev, golang-pty-dev, golang-github-mvo5-uboot-go-dev, golang-yaml.v2-dev, golang-gopkg-tomb.v2-dev, golang-websocket-dev, lsb-release, python3, python3-markdown, squashfs-tools\nArchitecture: any all\nStandards-Version: 3.9.7\nFormat: 3.0 (native)\nDirectory: pool/main/s/snapd\nFiles:\n d60c2874af681a6831163d2d87c65381 2370 snapd_2.0.2.dsc\n 36f4ddeeffd919e28011147ffb93f3fd 338240 snapd_2.0.2.tar.xz\nHomepage: https://github.com/ubuntu-core/snappy\nVcs-Browser: https://github.com/ubuntu-core/snappy\nVcs-Git: https://github.com/ubuntu-core/snappy.git\nTestsuite: autopkgtest\nPackage-List:\n golang-github-ubuntu-core-snappy-dev deb devel optional arch=all\n snapd deb devel optional arch=any\n ubuntu-core-snapd-units deb devel optional arch=any\n ubuntu-snappy deb oldlibs optional arch=all\n ubuntu-snappy-cli deb oldlibs optional arch=all\nChecksums-Sha1:\n 6fc4d0f8983091f23e426c14522f5503416a252c 2370 snapd_2.0.2.dsc\n dd3e399389e927415d4c9ace4ad055e3eab6834a 338240 snapd_2.0.2.tar.xz\nChecksums-Sha256:\n 092d09614cabcd2ea68c02e6f075d37c05014a702c53d275c6e6befc65f27f49 2370 snapd_2.0.2.dsc\n 8725ec5331ace71d1aeb2d9b2ebc2105ff29e9db6dd9890c94ccb7b2382b63c9 338240 snapd_2.0.2.tar.xz",
            "title": "\u6e90\u78bc\u5957\u4ef6\u8cc7\u8a0a"
        },
        {
            "location": "/content/command/snap/",
            "text": "snap command\n\n\n\u89c0\u770b help\n\n\n\u57f7\u884c\n\n\n$ snap\n\n\n\n\n\u986f\u793a\n\n\nerror: Please specify one command of: abort, ack, changes, connect, disconnect, find, install, interfaces, known, list, login, logout, refresh or remove\n\n\n\n\n\u57f7\u884c\n\n\n$ snap --help\n\n\n\n\n\u6216\u662f\u57f7\u884c\n\n\n$ snap -h\n\n\n\n\n\u986f\u793a\n\n\nUsage:\n  snap [OPTIONS] \ncommand\n\n\nHelp Options:\n  -h, --help  Show this help message\n\nAvailable commands:\n  abort       Abort a pending change\n  ack         Adds an assertion to the system\n  changes     List system changes\n  connect     Connects a plug to a slot\n  disconnect  Disconnects a plug from a slot\n  find        Finds packages to install\n  install     Install a snap to the system\n  interfaces  Lists interfaces in the system\n  known       Shows known assertions of the provided type\n  list        List installed snaps\n  login       Log into the store\n  logout      Log out of the store\n  refresh     Refresh a snap in the system\n  remove      Remove a snap from the system\n\n\n\n\n\u57f7\u884c\u6307\u4ee4\n\n\n$ snap find\n\n\n\n\n\u89c0\u770b manpage\n\n\n\u57f7\u884c\n\n\n$ man 1 snap\n\n\n\n\n\u67e5\u8a62 snap \u653e\u5728\u90a3\u500b\u4f4d\u7f6e\n\n\n\u57f7\u884c\n\n\n$ whereis snap\n\n\n\n\n\u986f\u793a\n\n\nsnap: /usr/bin/snap /usr/share/man/man1/snap.1.gz\n\n\n\n\n\u67e5\u8a62 snap \u5c6c\u65bc\u90a3\u500b\u5957\u4ef6\n\n\n\u57f7\u884c\n\n\n$ dpkg -S /usr/bin/snap\n\n\n\n\n\u986f\u793a\n\n\nsnapd: /usr/bin/snap\n\n\n\n\n\u8868\u793a\u300c/usr/bin/snap\u300d\u662f\u5c6c\u65bc\u300c\nsnapd\n\u300d\u9019\u500b\u5957\u4ef6\u3002",
            "title": "snap"
        },
        {
            "location": "/content/command/snap/#snap-command",
            "text": "",
            "title": "snap command"
        },
        {
            "location": "/content/command/snap/#help",
            "text": "\u57f7\u884c  $ snap  \u986f\u793a  error: Please specify one command of: abort, ack, changes, connect, disconnect, find, install, interfaces, known, list, login, logout, refresh or remove  \u57f7\u884c  $ snap --help  \u6216\u662f\u57f7\u884c  $ snap -h  \u986f\u793a  Usage:\n  snap [OPTIONS]  command \n\nHelp Options:\n  -h, --help  Show this help message\n\nAvailable commands:\n  abort       Abort a pending change\n  ack         Adds an assertion to the system\n  changes     List system changes\n  connect     Connects a plug to a slot\n  disconnect  Disconnects a plug from a slot\n  find        Finds packages to install\n  install     Install a snap to the system\n  interfaces  Lists interfaces in the system\n  known       Shows known assertions of the provided type\n  list        List installed snaps\n  login       Log into the store\n  logout      Log out of the store\n  refresh     Refresh a snap in the system\n  remove      Remove a snap from the system",
            "title": "\u89c0\u770b help"
        },
        {
            "location": "/content/command/snap/#_1",
            "text": "$ snap find",
            "title": "\u57f7\u884c\u6307\u4ee4"
        },
        {
            "location": "/content/command/snap/#manpage",
            "text": "\u57f7\u884c  $ man 1 snap",
            "title": "\u89c0\u770b manpage"
        },
        {
            "location": "/content/command/snap/#snap",
            "text": "\u57f7\u884c  $ whereis snap  \u986f\u793a  snap: /usr/bin/snap /usr/share/man/man1/snap.1.gz",
            "title": "\u67e5\u8a62 snap \u653e\u5728\u90a3\u500b\u4f4d\u7f6e"
        },
        {
            "location": "/content/command/snap/#snap_1",
            "text": "\u57f7\u884c  $ dpkg -S /usr/bin/snap  \u986f\u793a  snapd: /usr/bin/snap  \u8868\u793a\u300c/usr/bin/snap\u300d\u662f\u5c6c\u65bc\u300c snapd \u300d\u9019\u500b\u5957\u4ef6\u3002",
            "title": "\u67e5\u8a62 snap \u5c6c\u65bc\u90a3\u500b\u5957\u4ef6"
        },
        {
            "location": "/content/command/snap-find/",
            "text": "snap find\n\n\nmanpage\n\n\n\u57f7\u884c\n\n\n$ man snap\n\n\n\n\n\u53ef\u4ee5\u627e\u5230\u4e00\u6bb5\u8aaa\u660e\n\n\nCOMMANDS\n\n...\u7565...\n\n   find\n       Finds packages to install\n\n       The find command queries the store for available packages.\n\n\n\n\nhelp\n\n\n\u57f7\u884c\n\n\n$ snap -h\n\n\n\n\n\u53ef\u4ee5\u627e\u5230\u4e00\u6bb5\u8aaa\u660e\n\n\nUsage:\n snap [OPTIONS] \ncommand\n\n\nHelp Options:\n -h, --help  Show this help message\n\nAvailable commands:\n\n...\u7565...\n\n find        Finds packages to install\n\n\n\n\n\u57f7\u884c\n\n\n$ snap find -h\n\n\n\n\n\u6216\u662f\u57f7\u884c\n\n\n$ snap find --help\n\n\n\n\n\u5247\u6703\u986f\u793a\n\n\nUsage:\n  snap [OPTIONS] find [\nquery\n]\n\nThe find command queries the store for available packages.\n\nHelp Options:\n  -h, --help         Show this help message\n\n\n\n\n\u6307\u4ee4\u7bc4\u4f8b\n\n\n\u57f7\u884c\n\n\n$ snap find\n\n\n\n\n\u986f\u793a\n\n\nName                   Version                  Summary\ncanonical-dragon       0.7.1                    The gadget snap for the dragonboard\ncanonical-i386         3.1                      The gadget snap for generic i386 systems\ncanonical-pc           3.1                      AMD64 generic package\ncanonical-pc-linux     4.4.0-18+20160419.13-26  The ubuntu-core kernel snap\ncanonical-pi2          3.2                      Raspberry Pi 2 support package\ngo-example-webserver   16.04-4                  Minimal Golang webserver for snappy\nhello-world            6.0                      Hello world example\nhttp                   4.6692016                HTTPie in a snap\nlinks                  2.12-1                   Web browser running in text mode\nmoon-buggy             1.0.51.9                 Drive a car across the moon\nnmap                   7.12SVN-0.4              Nmap (\nNetwork Mapper\n) is a free and open source utility for network discovery and security auditing\nnotes                  0.0.8~snap3.gita80fd1c   Note-taking application, write down your thoughts\nshout                  0.53.0                   A self hosted web IRC client\nsshtron                1.0                      multiplayer Tron via ssh\ntmux                   2.3bump1                 tmux\ntor-middle-relay       0.2.7.6-6                Essential infrastructure node for Tor network\nubuntu-calculator-app  2.1+snap3                Ubuntu Calculator application for the Unity 7 desktop\nubuntu-clock-app       3.6+snap3                Ubuntu Clock application for the Unity 7 desktop\nubuntu-core            16.04+20160419.20-55     The ubuntu-core OS snap\nxkcd-webserver         16.04-5                  Show random XKCD compic via a build-in webserver\nyacas                  1.4.2                    Yet Another Computer Algebra System\n\n\n\n\n\u57f7\u884c\n\n\n$ snap find hello\n\n\n\n\n\u986f\u793a\n\n\nName         Version  Summary\nhello-world  6.0      Hello world example\n\n\n\n\n\u57f7\u884c\n\n\n$ snap find h\n\n\n\n\n\u986f\u793a\n\n\nName         Version    Summary\nhello-world  6.0        Hello world example\nhttp         4.6692016  HTTPie in a snap\n\n\n\n\n\u57f7\u884c\n\n\n$ snap find u\n\n\n\n\n\u986f\u793a\n\n\nName                   Version               Summary\nubuntu-calculator-app  2.1+snap3             Ubuntu Calculator application for the Unity 7 desktop\nubuntu-clock-app       3.6+snap3             Ubuntu Clock application for the Unity 7 desktop\nubuntu-core            16.04+20160419.20-55  The ubuntu-core OS snap\n\n\n\n\n\u57f7\u884c\n\n\n$ snap find *u\n\n\n\n\n\u986f\u793a\n\n\nName                   Version                  Summary\ncanonical-pc-linux     4.4.0-18+20160419.13-26  The ubuntu-core kernel snap\nmoon-buggy             1.0.51.9                 Drive a car across the moon\nshout                  0.53.0                   A self hosted web IRC client\nsshtron                1.0                      multiplayer Tron via ssh\ntmux                   2.3bump1                 tmux\nubuntu-calculator-app  2.1+snap3                Ubuntu Calculator application for the Unity 7 desktop\nubuntu-clock-app       3.6+snap3                Ubuntu Clock application for the Unity 7 desktop\nubuntu-core            16.04+20160419.20-55     The ubuntu-core OS snap\n\n\n\n\n\u57f7\u884c\n\n\n$ snap find un\n\n\n\n\n\u986f\u793a\n\n\nerror: no snaps found for \nun\n\n\n\n\n\u57f7\u884c\n\n\n$ snap find *un\n\n\n\n\n\u986f\u793a\n\n\nName                   Version               Summary\nubuntu-calculator-app  2.1+snap3             Ubuntu Calculator application for the Unity 7 desktop\nubuntu-clock-app       3.6+snap3             Ubuntu Clock application for the Unity 7 desktop\nubuntu-core            16.04+20160419.20-55  The ubuntu-core OS snap",
            "title": "snap find"
        },
        {
            "location": "/content/command/snap-find/#snap-find",
            "text": "",
            "title": "snap find"
        },
        {
            "location": "/content/command/snap-find/#manpage",
            "text": "\u57f7\u884c  $ man snap  \u53ef\u4ee5\u627e\u5230\u4e00\u6bb5\u8aaa\u660e  COMMANDS\n\n...\u7565...\n\n   find\n       Finds packages to install\n\n       The find command queries the store for available packages.",
            "title": "manpage"
        },
        {
            "location": "/content/command/snap-find/#help",
            "text": "\u57f7\u884c  $ snap -h  \u53ef\u4ee5\u627e\u5230\u4e00\u6bb5\u8aaa\u660e  Usage:\n snap [OPTIONS]  command \n\nHelp Options:\n -h, --help  Show this help message\n\nAvailable commands:\n\n...\u7565...\n\n find        Finds packages to install  \u57f7\u884c  $ snap find -h  \u6216\u662f\u57f7\u884c  $ snap find --help  \u5247\u6703\u986f\u793a  Usage:\n  snap [OPTIONS] find [ query ]\n\nThe find command queries the store for available packages.\n\nHelp Options:\n  -h, --help         Show this help message",
            "title": "help"
        },
        {
            "location": "/content/command/snap-find/#_1",
            "text": "\u57f7\u884c  $ snap find  \u986f\u793a  Name                   Version                  Summary\ncanonical-dragon       0.7.1                    The gadget snap for the dragonboard\ncanonical-i386         3.1                      The gadget snap for generic i386 systems\ncanonical-pc           3.1                      AMD64 generic package\ncanonical-pc-linux     4.4.0-18+20160419.13-26  The ubuntu-core kernel snap\ncanonical-pi2          3.2                      Raspberry Pi 2 support package\ngo-example-webserver   16.04-4                  Minimal Golang webserver for snappy\nhello-world            6.0                      Hello world example\nhttp                   4.6692016                HTTPie in a snap\nlinks                  2.12-1                   Web browser running in text mode\nmoon-buggy             1.0.51.9                 Drive a car across the moon\nnmap                   7.12SVN-0.4              Nmap ( Network Mapper ) is a free and open source utility for network discovery and security auditing\nnotes                  0.0.8~snap3.gita80fd1c   Note-taking application, write down your thoughts\nshout                  0.53.0                   A self hosted web IRC client\nsshtron                1.0                      multiplayer Tron via ssh\ntmux                   2.3bump1                 tmux\ntor-middle-relay       0.2.7.6-6                Essential infrastructure node for Tor network\nubuntu-calculator-app  2.1+snap3                Ubuntu Calculator application for the Unity 7 desktop\nubuntu-clock-app       3.6+snap3                Ubuntu Clock application for the Unity 7 desktop\nubuntu-core            16.04+20160419.20-55     The ubuntu-core OS snap\nxkcd-webserver         16.04-5                  Show random XKCD compic via a build-in webserver\nyacas                  1.4.2                    Yet Another Computer Algebra System  \u57f7\u884c  $ snap find hello  \u986f\u793a  Name         Version  Summary\nhello-world  6.0      Hello world example  \u57f7\u884c  $ snap find h  \u986f\u793a  Name         Version    Summary\nhello-world  6.0        Hello world example\nhttp         4.6692016  HTTPie in a snap  \u57f7\u884c  $ snap find u  \u986f\u793a  Name                   Version               Summary\nubuntu-calculator-app  2.1+snap3             Ubuntu Calculator application for the Unity 7 desktop\nubuntu-clock-app       3.6+snap3             Ubuntu Clock application for the Unity 7 desktop\nubuntu-core            16.04+20160419.20-55  The ubuntu-core OS snap  \u57f7\u884c  $ snap find *u  \u986f\u793a  Name                   Version                  Summary\ncanonical-pc-linux     4.4.0-18+20160419.13-26  The ubuntu-core kernel snap\nmoon-buggy             1.0.51.9                 Drive a car across the moon\nshout                  0.53.0                   A self hosted web IRC client\nsshtron                1.0                      multiplayer Tron via ssh\ntmux                   2.3bump1                 tmux\nubuntu-calculator-app  2.1+snap3                Ubuntu Calculator application for the Unity 7 desktop\nubuntu-clock-app       3.6+snap3                Ubuntu Clock application for the Unity 7 desktop\nubuntu-core            16.04+20160419.20-55     The ubuntu-core OS snap  \u57f7\u884c  $ snap find un  \u986f\u793a  error: no snaps found for  un  \u57f7\u884c  $ snap find *un  \u986f\u793a  Name                   Version               Summary\nubuntu-calculator-app  2.1+snap3             Ubuntu Calculator application for the Unity 7 desktop\nubuntu-clock-app       3.6+snap3             Ubuntu Clock application for the Unity 7 desktop\nubuntu-core            16.04+20160419.20-55  The ubuntu-core OS snap",
            "title": "\u6307\u4ee4\u7bc4\u4f8b"
        },
        {
            "location": "/content/command/snap-install/",
            "text": "snap install\n\n\nmanpage\n\n\n\u57f7\u884c\n\n\n$ man snap\n\n\n\n\n\u53ef\u4ee5\u627e\u5230\u4e00\u6bb5\u8aaa\u660e\n\n\nCOMMANDS\n\n...\u7565...\n\n   install\n       Install a snap to the system\n\n       The install command installs and activates the named snap in the system.\n\n       Usage: snap install [install-OPTIONS]\n\n       --channel\n              Install from this channel instead of the device's default\n\n       --devmode\n              Install the snap with non-enforcing security\n\n\n\n\nhelp\n\n\n\u57f7\u884c\n\n\n$ snap -h\n\n\n\n\n\u53ef\u4ee5\u627e\u5230\u4e00\u6bb5\u8aaa\u660e\n\n\nUsage:\n  snap [OPTIONS] \ncommand\n\n\nHelp Options:\n  -h, --help  Show this help message\n\nAvailable commands:\n\n...\u7565...\n\n  install     Install a snap to the system\n\n\n\n\n\u57f7\u884c\n\n\n$ snap install -h\n\n\n\n\n\u6216\u662f\u57f7\u884c\n\n\n$ snap install --help\n\n\n\n\n\u5247\u6703\u986f\u793a\n\n\nUsage:\n  snap [OPTIONS] install [install-OPTIONS] \nsnap\n\n\nThe install command installs and activates the named snap in the system.\n\nHelp Options:\n  -h, --help         Show this help message\n\n[install command options]\n          --channel= Install from this channel instead of the device's default\n          --devmode  Install the snap with non-enforcing security\n\n\n\n\n\u6307\u4ee4\u7bc4\u4f8b\n\n\n\u57f7\u884c\n\n\n$ snap install\n\n\n\n\n\u986f\u793a\n\n\nerror: the required argument `\nsnap\n` was not provided\n\n\n\n\n\u57f7\u884c\n\n\n$ sudo snap install hello-world\n\n\n\n\n\u6703\u6709\u5b89\u88dd\u7684\u52d5\u614b\n\n\n\u57f7\u884c\n\n\n$ snap list\n\n\n\n\n\u986f\u793a\n\n\nName         Version               Developer\nhello-world  6.0                   canonical\nubuntu-core  16.04+20160419.20-55  canonical\n\n\n\n\n\u5728\u4e00\u6b21\u57f7\u884c\n\n\n$ sudo snap install hello-world\n\n\n\n\n\u986f\u793a\n\n\nerror: can't install \nhello-world\n: snap \nhello-world\n already installed\n\n\n\n\n\u63a2\u7d22\n\n\n\u57f7\u884c\n\n\n$ whereis hello-world\n\n\n\n\n\u986f\u793a\n\n\nhello-world: /snap/bin/hello-world.sh /snap/bin/hello-world.usehw /snap/bin/hello-world.env /snap/bin/hello-world.echo /snap/bin/hello-world.showdev /snap/bin/hello-world.evil\n\n\n\n\n\u63a2\u7d22 /snap/\n\n\n\u57f7\u884c\n\n\nls /snap/ -1\n\n\n\n\n\u986f\u793a\n\n\nbin\nhello-world\nubuntu-core\n\n\n\n\n\u63a2\u7d22 /snap/bin\n\n\n\u57f7\u884c\n\n\n$ tree /snap/bin\n\n\n\n\n\u986f\u793a\n\n\n/snap/bin\n\u251c\u2500\u2500 hello-world.echo\n\u251c\u2500\u2500 hello-world.env\n\u251c\u2500\u2500 hello-world.evil\n\u251c\u2500\u2500 hello-world.sh\n\u251c\u2500\u2500 hello-world.showdev\n\u2514\u2500\u2500 hello-world.usehw\n\n0 directories, 6 files\n\n\n\n\n\u57f7\u884c\n\n\n$ hello-world.echo\n\n\n\n\n\u986f\u793a\n\n\nHello World!\n\n\n\n\n\u63a2\u7d22 /etc/profile.d/apps-bin-path.sh\n\n\n\u57f7\u884c\n\n\n$ cat /etc/profile.d/apps-bin-path.sh\n\n\n\n\n\u986f\u793a\n\n\n# Expand the $PATH to include /snaps/bin which is what snappy applications\n# use\nPATH=$PATH:/snap/bin\n\n\n\n\n\u63a2\u7d22 /snap/hello-world\n\n\n\u57f7\u884c\n\n\n$ tree /snap/hello-world/\n\n\n\n\n\u986f\u793a\n\n\n/snap/hello-world/\n\u251c\u2500\u2500 25\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 bin\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 echo\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 env\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 evil\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 sh\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 showdev\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 usehw\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 meta\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 icon.png\n\u2502\u00a0\u00a0     \u2514\u2500\u2500 snap.yaml\n\u2514\u2500\u2500 current -\n 25\n\n4 directories, 8 files\n\n\n\n\n\u63a2\u7d22 /snap/hello-world/current/meta/snap.yaml\n\n\n\u57f7\u884c\n\n\n$ cat /snap/hello-world/current/meta/snap.yaml\n\n\n\n\n\u986f\u793a\n\n\nname: hello-world\nversion: 6.0\narchitectures: [ all ]\nsummary: The hello-world of snappy apps\ndescription: This is a simple hello world example that includes a\n  interesting apps to play with snappy and the sandboxing in snappy\n    hello-world.echo - simply output text\n    hello-world.env - dump the env of commands run inside app sandbox\n    hello-world.evil - show how snappy prevents apps to do stuff outside their sandbox\n    hello-world.showdev - depreated - will be replaced with skills\n    hello-world.usehw - depreated - will be replaced with skills example\n    hello-world.sh - enter interactive shell that runs in app sandbox\napps:\n echo:\n   command: bin/echo\n env:\n   command: bin/env\n evil:\n   command: bin/evil\n showdev:\n   command: bin/showdev\n usehw:\n   command: bin/usehw\n sh:\n   command: bin/sh\n\n\n\n\n\u63a2\u7d22 /snap/hello-world/current/bin/echo\n\n\n\u57f7\u884c\n\n\n$ cat /snap/hello-world/current/bin/echo\n\n\n\n\n\u986f\u793a\n\n\n#!/bin/sh\n\necho \nHello World!\n\n\n\n\n\u63a2\u7d22 /snap/hello-world/current/bin/env\n\n\n\u57f7\u884c\n\n\n$ cat /snap/hello-world/current/bin/env\n\n\n\n\n\u986f\u793a\n\n\n#!/bin/bash\n\n/usr/bin/env\n\n\n\n\n\u63a2\u7d22 /snap/hello-world/current/bin/evil\n\n\n\u57f7\u884c\n\n\n$ cat /snap/hello-world/current/bin/evil\n\n\n\n\n\u986f\u793a\n\n\n#!/bin/sh\n\nset -e\necho \nHello Evil World!\n\n\necho \nThis example demonstrates the app confinement\n\necho \nYou should see a permission denied error next\n\n\necho \nHaha\n \n /var/tmp/myevil.txt\n\necho \nIf you see this line the confinement is not working correctly, please file a bug\n\n\n\n\n\u63a2\u7d22 /snap/hello-world/current/bin/sh\n\n\n\u57f7\u884c\n\n\n$ cat /snap/hello-world/current/bin/sh\n\n\n\n\n\u986f\u793a\n\n\n#!/bin/bash\n\ncat \nEOM\nLaunching a shell inside the default app confinement. Navigate to your\napp-specific directories with:\n\n  $ cd \\$SNAP\n  $ cd \\$SNAP_DATA\n  $ cd \\$SNAP_USER_DATA\n\nEOM\n\n/bin/bash --norc -i\n\n\n\n\n\u63a2\u7d22 /snap/hello-world/current/bin/showdev\n\n\n\u57f7\u884c\n\n\n$ cat /snap/hello-world/current/bin/showdev\n\n\n\n\n\u986f\u793a\n\n\n#!/bin/sh\n\n# show the view on the /dev/ system of an app\n\nargs=$@\ntest -z \n$args\n \n findargs=/dev/\ntest -n \n$args\n \n findargs=$args\n\necho \nHello /dev World: Here is what I can see with 'find $findargs'\n\n\nfind $findargs\n\nAPPNAME=`echo $SNAP | cut -f 3 -d '/'`\necho \n\necho \nHere is hardware that has been assigned to me ($APPNAME):\n\nudevadm trigger --verbose --dry-run --tag-match=snappy-assign --property-match=SNAPPY_APP=\n$APPNAME\n\n\n\n\n\u63a2\u7d22 /snap/hello-world/current/bin/showdev\n\n\n\u57f7\u884c\n\n\n$ cat /snap/hello-world/current/bin/showdev\n\n\n\n\n\u986f\u793a\n\n\n#!/bin/sh\n\nset -e\necho \nHello hw-assign world!\n\n\necho \nThis example demonstrates the app confinement for assigned hardware\n\necho \n\n\nAPPNAME=`echo $SNAP | cut -f 3 -d '/'`\nif [ -z \n$APPNAME\n ]; then\n    echo \nCould not determine application name.\n\n    exit 1\nfi\nhw=`udevadm trigger --verbose --dry-run --tag-match=snappy-assign --property-match=SNAPPY_APP=\n$APPNAME\n | grep kmsg || true`\nif [ -z \n$hw\n ]; then\n    echo \nNo hardware is assigned for this device. Try adding /dev/kmsg with:\n\n    echo \n  $ sudo snappy hw-assign $APPNAME /dev/kmsg\n\nelse\n    echo \nGood, '$hw' is assigned to us.\n\n    echo \nNow try to read a line from /dev/kmsg:\n\n    head -1 /dev/kmsg\n    echo \n\n    echo \nIt worked!\n\nfi\n\n\n\n\n\u63a2\u7d22 /var/snap\n\n\n\u57f7\u884c\n\n\n$ tree /var/snap\n\n\n\n\n\u986f\u793a\n\n\n/var/snap\n\u251c\u2500\u2500 hello-world\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 25\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 current -\n 25\n\u2514\u2500\u2500 ubuntu-core\n    \u251c\u2500\u2500 109\n    \u2514\u2500\u2500 current -\n 109\n\n6 directories, 0 files\n\n\n\n\n\u63a2\u7d22 /var/lib/snapd/\n\n\n\u57f7\u884c\n\n\n$ tree /var/lib/snapd/\n\n\n\n\n\u986f\u793a\n\n\n/var/lib/snapd/\n\u251c\u2500\u2500 apparmor\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 additional\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 profiles\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 snap.hello-world.echo\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 snap.hello-world.env\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 snap.hello-world.evil\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 snap.hello-world.sh\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 snap.hello-world.showdev\n\u2502\u00a0\u00a0     \u2514\u2500\u2500 snap.hello-world.usehw\n\u251c\u2500\u2500 assertions\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 asserts-v0\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 private-keys-v0\n\u251c\u2500\u2500 desktop\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 applications\n\u251c\u2500\u2500 lib\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 gl\n\u251c\u2500\u2500 seccomp\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 profiles\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 snap.hello-world.echo\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 snap.hello-world.env\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 snap.hello-world.evil\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 snap.hello-world.sh\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 snap.hello-world.showdev\n\u2502\u00a0\u00a0     \u2514\u2500\u2500 snap.hello-world.usehw\n\u251c\u2500\u2500 snaps\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 hello-world_25.snap\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 ubuntu-core_109.snap\n\u2514\u2500\u2500 state.json\n\n13 directories, 15 files\n\n\n\n\n\u63a2\u7d22 /var/lib/snapd/state.json\n\n\n\u57f7\u884c\n\n\n$ sudo less /var/lib/snapd/state.json\n\n\n\n\n\u63a2\u7d22 /var/lib/snapd/apparmor/profiles/snap.hello-world.echo\n\n\n\u57f7\u884c\n\n\n$ less /var/lib/snapd/apparmor/profiles/snap.hello-world.echo\n\n\n\n\n\u986f\u793a\n\n\n# Description: Allows access to app-specific directories and basic runtime\n# Usage: common\n\n# vim:syntax=apparmor\n\n#include \ntunables/global\n\n\n@{APP_NAME}=\necho\n\n@{SNAP_NAME}=\nhello-world\n\n@{SNAP_REVISION}=\n25\n\n@{INSTALL_DIR}=\n/snap\n\n\nprofile \nsnap.hello-world.echo\n (attach_disconnected) {\n  #include \nabstractions/base\n\n  #include \nabstractions/consoles\n\n  #include \nabstractions/openssl\n\n\n  # for python apps/services\n  #include \nabstractions/python\n\n  /usr/bin/python{,2,2.[0-9]*,3,3.[0-9]*} ixr,\n  deny /usr/lib/python3*/{,**/}__pycache__/ w,              # noisy\n  deny /usr/lib/python3*/{,**/}__pycache__/**.pyc.[0-9]* w,\n\n  # for perl apps/services\n  #include \nabstractions/perl\n\n  /usr/bin/perl{,5*} ixr,\n\n# TODO: we must remove these since things like 'container-management' will be\n# broken if we have explicit denies. However, the development tools need to be\n# clear that these can't be allowed.\n  # Explicitly deny ptrace for now since it can be abused to break out of the\n  # seccomp sandbox. https://lkml.org/lkml/2015/3/18/823\n#  audit deny ptrace (trace),\n\n  # Explicitly deny capability mknod so apps can't create devices\n#  audit deny capability mknod,\n\n  # Explicitly deny mount, remount and umount so apps can't modify things in\n  # their namespace\n#  audit deny mount,\n#  audit deny remount,\n#  audit deny umount,\n\n  # for bash 'binaries' (do *not* use abstractions/bash)\n  # user-specific bash files\n  /bin/bash ixr,\n  /bin/dash ixr,\n  /etc/bash.bashrc r,\n  /etc/{passwd,group,nsswitch.conf} r,  # very common\n  /etc/libnl-3/{classid,pktloc} r,      # apps that use libnl\n  /var/lib/extrausers/{passwd,group} r,\n  /etc/profile r,\n  /usr/share/terminfo/** r,\n  /etc/inputrc r,\n  deny @{HOME}/.inputrc r,\n  # Common utilities for shell scripts\n  /{,usr/}bin/{,g,m}awk ixr,\n  /{,usr/}bin/basename ixr,\n  /{,usr/}bin/bunzip2 ixr,\n  /{,usr/}bin/bzcat ixr,\n  /{,usr/}bin/bzdiff ixr,\n  /{,usr/}bin/bzgrep ixr,\n  /{,usr/}bin/bzip2 ixr,\n  /{,usr/}bin/cat ixr,\n  /{,usr/}bin/chmod ixr,\n  /{,usr/}bin/cmp ixr,\n  /{,usr/}bin/cp ixr,\n  /{,usr/}bin/cpio ixr,\n  /{,usr/}bin/cut ixr,\n  /{,usr/}bin/date ixr,\n  /{,usr/}bin/dd ixr,\n  /{,usr/}bin/diff{,3} ixr,\n  /{,usr/}bin/dir ixr,\n  /{,usr/}bin/dirname ixr,\n  /{,usr/}bin/echo ixr,\n  /{,usr/}bin/{,e,f,r}grep ixr,\n  /{,usr/}bin/env ixr,\n  /{,usr/}bin/expr ixr,\n  /{,usr/}bin/false ixr,\n  /{,usr/}bin/find ixr,\n  /{,usr/}bin/fmt ixr,\n  /{,usr/}bin/getopt ixr,\n  /{,usr/}bin/groups ixr,\n  /{,usr/}bin/gzip ixr,\n  /{,usr/}bin/head ixr,\n  /{,usr/}bin/hostname ixr,\n  /{,usr/}bin/id ixr,\n  /{,usr/}bin/igawk ixr,\n  /{,usr/}bin/kill ixr,\n  /{,usr/}bin/ldd ixr,\n  /{,usr/}bin/less{,file,pipe} ixr,\n  /{,usr/}bin/ln ixr,\n  /{,usr/}bin/line ixr,\n  /{,usr/}bin/link ixr,\n  /{,usr/}bin/logger ixr,\n  /{,usr/}bin/ls ixr,\n  /{,usr/}bin/md5sum ixr,\n  /{,usr/}bin/mkdir ixr,\n  /{,usr/}bin/mktemp ixr,\n  /{,usr/}bin/more ixr,\n  /{,usr/}bin/mv ixr,\n  /{,usr/}bin/openssl ixr, # may cause harmless capability block_suspend denial\n  /{,usr/}bin/pgrep ixr,\n  /{,usr/}bin/printenv ixr,\n  /{,usr/}bin/printf ixr,\n  /{,usr/}bin/ps ixr,\n  /{,usr/}bin/pwd ixr,\n  /{,usr/}bin/readlink ixr,\n  /{,usr/}bin/realpath ixr,\n  /{,usr/}bin/rev ixr,\n  /{,usr/}bin/rm ixr,\n  /{,usr/}bin/rmdir ixr,\n  /{,usr/}bin/sed ixr,\n  /{,usr/}bin/seq ixr,\n  /{,usr/}bin/sleep ixr,\n  /{,usr/}bin/sort ixr,\n  /{,usr/}bin/stat ixr,\n  /{,usr/}bin/tac ixr,\n  /{,usr/}bin/tail ixr,\n  /{,usr/}bin/tar ixr,\n  /{,usr/}bin/tee ixr,\n  /{,usr/}bin/test ixr,\n  /{,usr/}bin/tempfile ixr,\n  /{,usr/}bin/tset ixr,\n  /{,usr/}bin/touch ixr,\n  /{,usr/}bin/tr ixr,\n  /{,usr/}bin/true ixr,\n  /{,usr/}bin/uname ixr,\n  /{,usr/}bin/uniq ixr,\n  /{,usr/}bin/unlink ixr,\n  /{,usr/}bin/unxz ixr,\n  /{,usr/}bin/unzip ixr,\n  /{,usr/}bin/vdir ixr,\n  /{,usr/}bin/wc ixr,\n  /{,usr/}bin/which ixr,\n  /{,usr/}bin/xargs ixr,\n  /{,usr/}bin/xz ixr,\n  /{,usr/}bin/yes ixr,\n  /{,usr/}bin/zcat ixr,\n  /{,usr/}bin/z{,e,f}grep ixr,\n  /{,usr/}bin/zip ixr,\n  /{,usr/}bin/zipgrep ixr,\n\n  # uptime\n  /{,usr/}bin/uptime ixr,\n  @{PROC}/uptime r,\n  @{PROC}/loadavg r,\n  # this is an information leak\n  deny /{,var/}run/utmp r,\n\n  # java\n  @{PROC}/@{pid}/ r,\n  @{PROC}/@{pid}/fd/ r,\n  owner @{PROC}/@{pid}/auxv r,\n  @{PROC}/@{pid}/version_signature r,\n  @{PROC}/@{pid}/version r,\n  @{PROC}/sys/vm/zone_reclaim_mode r,\n  /etc/lsb-release r,\n  /sys/devices/**/read_ahead_kb r,\n  /sys/devices/system/cpu/** r,\n  /sys/kernel/mm/transparent_hugepage/enabled r,\n  /sys/kernel/mm/transparent_hugepage/defrag r,\n  # NOTE: this leaks running process and java seems to want it, but operates\n  # ok without it. Deny for now to silence the denial but we could allow\n  # owner match until AppArmor kernel var is available to solve this properly.\n  deny @{PROC}/@{pid}/cmdline r,\n  #owner @{PROC}/@{pid}/cmdline r,\n\n  # Miscellaneous accesses\n  /etc/mime.types r,\n  @{PROC}/ r,\n  /etc/{,writable/}hostname r,\n  /etc/{,writable/}localtime r,\n  /etc/{,writable/}timezone r,\n  @{PROC}/@{pid}/stat r,\n  @{PROC}/@{pid}/statm r,\n  @{PROC}/@{pid}/status r,\n  @{PROC}/sys/kernel/hostname r,\n  @{PROC}/sys/kernel/osrelease r,\n  @{PROC}/sys/fs/file-max r,\n  @{PROC}/sys/kernel/pid_max r,\n  @{PROC}/sys/kernel/random/uuid r,\n\n  # Eases hardware assignment (doesn't give anything away)\n  /etc/udev/udev.conf r,\n  /sys/       r,\n  /sys/bus/   r,\n  /sys/class/ r,\n\n  # this leaks interface names and stats, but not in a way that is traceable\n  # to the user/device\n  @{PROC}/net/dev r,\n\n  # Read-only for the install directory\n  @{INSTALL_DIR}/@{SNAP_NAME}/                   r,\n  @{INSTALL_DIR}/@{SNAP_NAME}/@{SNAP_REVISION}/    r,\n  @{INSTALL_DIR}/@{SNAP_NAME}/@{SNAP_REVISION}/**  mrklix,\n\n  # Don't log noisy python denials (see LP: #1496895 for more details)\n  deny @{INSTALL_DIR}/@{SNAP_NAME}/**/__pycache__/             w,\n  deny @{INSTALL_DIR}/@{SNAP_NAME}/**/__pycache__/*.pyc.[0-9]* w,\n\n  # Read-only home area for other versions\n  owner @{HOME}/snap/@{SNAP_NAME}/                  r,\n  owner @{HOME}/snap/@{SNAP_NAME}/**                mrkix,\n\n  # Writable home area for this version.\n  owner @{HOME}/snap/@{SNAP_NAME}/@{SNAP_REVISION}/** wl,\n\n  # Read-only system area for other versions\n  /var/snap/@{SNAP_NAME}/   r,\n  /var/snap/@{SNAP_NAME}/** mrkix,\n\n  # Writable system area only for this version\n  /var/snap/@{SNAP_NAME}/@{SNAP_REVISION}/** wl,\n\n  # The ubuntu-core-launcher creates an app-specific private restricted /tmp\n  # and will fail to launch the app if something goes wrong. As such, we can\n  # simply allow full access to /tmp.\n  /tmp/   r,\n  /tmp/** mrwlkix,\n\n  # Also do the same for shm\n  /{dev,run}/shm/snap/@{SNAP_NAME}/                  r,\n  /{dev,run}/shm/snap/@{SNAP_NAME}/**                rk,\n  /{dev,run}/shm/snap/@{SNAP_NAME}/@{SNAP_REVISION}/   r,\n  /{dev,run}/shm/snap/@{SNAP_NAME}/@{SNAP_REVISION}/** mrwlkix,\n\n  # Allow apps from the same package to communicate with each other via an\n  # abstract or anonymous socket\n  unix peer=(label=snap.@{SNAP_NAME}.*),\n\n  # Allow apps from the same package to signal each other via signals\n  signal peer=snap.@{SNAP_NAME}.*,\n\n  # for 'udevadm trigger --verbose --dry-run --tag-match=snappy-assign'\n  /{,s}bin/udevadm ixr,\n  /etc/udev/udev.conf r,\n  /{,var/}run/udev/tags/snappy-assign/ r,\n  @{PROC}/cmdline r,\n  /sys/devices/**/uevent r,\n\n  # LP: #1447237: adding '--property-match=SNAPPY_APP=\npkgname\n' to the above\n  # requires:\n  #   /run/udev/data/* r,\n  # but that reveals too much about the system and cannot be granted to apps\n  # by default at this time.\n\n  # For convenience, allow apps to see what is in /dev even though cgroups\n  # will block most access\n  /dev/ r,\n  /dev/**/ r,\n\n  # Do the same with /sys/devices and /sys/class to help people using hw-assign\n  /sys/devices/ r,\n  /sys/devices/**/ r,\n  /sys/class/ r,\n  /sys/class/**/ r,\n\n\n}\n\n\n\n\n\u63a2\u7d22 /var/lib/snapd/seccomp/profiles/snap.hello-world.echo\n\n\n\u57f7\u884c\n\n\n$ less /var/lib/snapd/seccomp/profiles/snap.hello-world.echo\n\n\n\n\n\u986f\u793a\n\n\n# Description: Allows access to app-specific directories and basic runtime\n# Usage: common\n#\n\n# Dangerous syscalls that we don't ever want to allow\n\n# kexec\ndeny kexec_load\n\n# kernel modules\ndeny create_module\ndeny init_module\ndeny finit_module\ndeny delete_module\n\n# these have a history of vulnerabilities, are not widely used, and\n# open_by_handle_at has been used to break out of docker containers by brute\n# forcing the handle value: http://stealth.openwall.net/xSports/shocker.c\ndeny name_to_handle_at\ndeny open_by_handle_at\n\n# Explicitly deny ptrace since it can be abused to break out of the seccomp\n# sandbox\ndeny ptrace\n\n# Explicitly deny capability mknod so apps can't create devices\ndeny mknod\ndeny mknodat\n\n# Explicitly deny (u)mount so apps can't change mounts in their namespace\ndeny mount\ndeny umount\ndeny umount2\n\n# Explicitly deny kernel keyring access\ndeny add_key\ndeny keyctl\ndeny request_key\n\n# end dangerous syscalls\n\naccess\nfaccessat\n\nalarm\nbrk\n\n# ARM private syscalls\nbreakpoint\ncacheflush\nset_tls\nusr26\nusr32\n\ncapget\n# AppArmor mediates capabilities, so allow capset (useful for apps that for\n# example want to drop capabilities)\ncapset\n\nchdir\nfchdir\n\n# We can't effectively block file perms due to open() with O_CREAT, so allow\n# chmod until we have syscall arg filtering (LP: #1446748)\nchmod\nfchmod\nfchmodat\n\n# snappy doesn't currently support per-app UID/GIDs so don't allow chown. To\n# properly support chown, we need to have syscall arg filtering (LP: #1446748)\n# and per-app UID/GIDs.\n#chown\n#chown32\n#fchown\n#fchown32\n#fchownat\n#lchown\n#lchown32\n\nclock_getres\nclock_gettime\nclock_nanosleep\nclone\nclose\ncreat\ndup\ndup2\ndup3\nepoll_create\nepoll_create1\nepoll_ctl\nepoll_ctl_old\nepoll_pwait\nepoll_wait\nepoll_wait_old\neventfd\neventfd2\nexecve\nexecveat\n_exit\nexit\nexit_group\nfallocate\n\n# requires CAP_SYS_ADMIN\n#fanotify_init\n#fanotify_mark\n\nfcntl\nfcntl64\nflock\nfork\nftime\nfutex\nget_mempolicy\nget_robust_list\nget_thread_area\ngetcpu\ngetcwd\ngetdents\ngetdents64\ngetegid\ngetegid32\ngeteuid\ngeteuid32\ngetgid\ngetgid32\ngetgroups\ngetgroups32\ngetitimer\ngetpgid\ngetpgrp\ngetpid\ngetppid\ngetpriority\ngetrandom\ngetresgid\ngetresgid32\ngetresuid\ngetresuid32\n\ngetrlimit\nugetrlimit\n\ngetrusage\ngetsid\ngettid\ngettimeofday\ngetuid\ngetuid32\n\ngetxattr\nfgetxattr\nlgetxattr\n\ninotify_add_watch\ninotify_init\ninotify_init1\ninotify_rm_watch\n\n# Needed by shell\nioctl\n\nio_cancel\nio_destroy\nio_getevents\nio_setup\nio_submit\nioprio_get\n# affects other processes, requires CAP_SYS_ADMIN. Potentially allow with\n# syscall filtering of (at least) IOPRIO_WHO_USER (LP: #1446748)\n#ioprio_set\n\nipc\nkill\nlink\nlinkat\n\nlistxattr\nllistxattr\nflistxattr\n\nlseek\nllseek\n_llseek\nlstat\nlstat64\n\nmadvise\nfadvise64\nfadvise64_64\narm_fadvise64_64\n\nmbarrier\nmbind\nmincore\nmkdir\nmkdirat\nmlock\nmlockall\nmmap\nmmap2\nmprotect\n\n# LP: #1448184 - these aren't currently mediated by AppArmor. Deny for now\n#mq_getsetattr\n#mq_notify\n#mq_open\n#mq_timedreceive\n#mq_timedsend\n#mq_unlink\n\nmremap\nmsgctl\nmsgget\nmsgrcv\nmsgsnd\nmsync\nmunlock\nmunlockall\nmunmap\n\nnanosleep\n\n# LP: #1446748 - deny until we have syscall arg filtering. Alternatively, set\n# RLIMIT_NICE hard limit for apps, launch them under an appropriate nice value\n# and allow this call\n#nice\n\n# LP: #1446748 - support syscall arg filtering for mode_t with O_CREAT\nopen\n\nopenat\npause\npipe\npipe2\npoll\nppoll\n\n# LP: #1446748 - support syscall arg filtering\nprctl\narch_prctl\n\nread\npread\npread64\npreadv\nreadv\n\nreadahead\nreaddir\nreadlink\nreadlinkat\nremap_file_pages\n\nremovexattr\nfremovexattr\nlremovexattr\n\nrename\nrenameat\nrenameat2\n\n# The man page says this shouldn't be needed, but we've seen denials for it\n# in the wild\nrestart_syscall\n\nrmdir\nrt_sigaction\nrt_sigpending\nrt_sigprocmask\nrt_sigqueueinfo\nrt_sigreturn\nrt_sigsuspend\nrt_sigtimedwait\nrt_tgsigqueueinfo\nsched_getaffinity\nsched_getattr\nsched_getparam\nsched_get_priority_max\nsched_get_priority_min\nsched_getscheduler\nsched_rr_get_interval\n# LP: #1446748 - when support syscall arg filtering, enforce pid_t is 0 so the\n# app may only change its own scheduler\nsched_setscheduler\n\nsched_yield\n\nselect\n_newselect\npselect\npselect6\n\nsemctl\nsemget\nsemop\nsemtimedop\nsendfile\nsendfile64\n\n# While we don't yet have seccomp arg filtering (LP: #1446748), we must allow\n# these because the launcher drops privileges after seccomp_load(). Eventually\n# we will only allow dropping to particular UIDs. For now, we mediate this with\n# AppArmor\nsetgid\nsetgid32\nsetregid\nsetregid32\nsetresgid\nsetresgid32\nsetresuid\nsetresuid32\nsetreuid\nsetreuid32\nsetuid\nsetuid32\n#setgroups\n#setgroups32\n\n# These break isolation but are common and can't be mediated at the seccomp\n# level with arg filtering\nsetpgid\nsetpgrp\n\nset_thread_area\nsetitimer\n\n# apps don't have CAP_SYS_RESOURCE so these can't be abused to raise the hard\n# limits\nsetrlimit\nprlimit64\n\nset_mempolicy\nset_robust_list\nsetsid\nset_tid_address\n\nsetxattr\nfsetxattr\nlsetxattr\n\nshmat\nshmctl\nshmdt\nshmget\nsignal\nsigaction\nsignalfd\nsignalfd4\nsigaltstack\nsigpending\nsigprocmask\nsigreturn\nsigsuspend\nsigtimedwait\nsigwaitinfo\n\n# needed by ls -l\nsocket\nconnect\n\n# Per man page, on Linux this is limited to only AF_UNIX so it is ok to have\n# in the default template\nsocketpair\n\nsplice\n\nstat\nstat64\nfstat\nfstat64\nfstatat64\nlstat\nnewfstatat\noldfstat\noldlstat\noldstat\n\nstatfs\nstatfs64\nfstatfs\nfstatfs64\nstatvfs\nfstatvfs\nustat\n\nsymlink\nsymlinkat\n\nsync\nsync_file_range\nsync_file_range2\narm_sync_file_range\nfdatasync\nfsync\nsyncfs\nsysinfo\nsyslog\ntee\ntgkill\ntime\ntimer_create\ntimer_delete\ntimer_getoverrun\ntimer_gettime\ntimer_settime\ntimerfd\ntimerfd_create\ntimerfd_gettime\ntimerfd_settime\ntimes\ntkill\n\ntruncate\ntruncate64\nftruncate\nftruncate64\n\numask\n\nuname\nolduname\noldolduname\n\nunlink\nunlinkat\n\nutime\nutimensat\nutimes\nfutimesat\n\nvfork\nvmsplice\nwait4\noldwait4\nwaitpid\nwaitid\n\nwrite\nwritev\npwrite\npwrite64\npwritev",
            "title": "snap install"
        },
        {
            "location": "/content/command/snap-install/#snap-install",
            "text": "",
            "title": "snap install"
        },
        {
            "location": "/content/command/snap-install/#manpage",
            "text": "\u57f7\u884c  $ man snap  \u53ef\u4ee5\u627e\u5230\u4e00\u6bb5\u8aaa\u660e  COMMANDS\n\n...\u7565...\n\n   install\n       Install a snap to the system\n\n       The install command installs and activates the named snap in the system.\n\n       Usage: snap install [install-OPTIONS]\n\n       --channel\n              Install from this channel instead of the device's default\n\n       --devmode\n              Install the snap with non-enforcing security",
            "title": "manpage"
        },
        {
            "location": "/content/command/snap-install/#help",
            "text": "\u57f7\u884c  $ snap -h  \u53ef\u4ee5\u627e\u5230\u4e00\u6bb5\u8aaa\u660e  Usage:\n  snap [OPTIONS]  command \n\nHelp Options:\n  -h, --help  Show this help message\n\nAvailable commands:\n\n...\u7565...\n\n  install     Install a snap to the system  \u57f7\u884c  $ snap install -h  \u6216\u662f\u57f7\u884c  $ snap install --help  \u5247\u6703\u986f\u793a  Usage:\n  snap [OPTIONS] install [install-OPTIONS]  snap \n\nThe install command installs and activates the named snap in the system.\n\nHelp Options:\n  -h, --help         Show this help message\n\n[install command options]\n          --channel= Install from this channel instead of the device's default\n          --devmode  Install the snap with non-enforcing security",
            "title": "help"
        },
        {
            "location": "/content/command/snap-install/#_1",
            "text": "\u57f7\u884c  $ snap install  \u986f\u793a  error: the required argument ` snap ` was not provided  \u57f7\u884c  $ sudo snap install hello-world  \u6703\u6709\u5b89\u88dd\u7684\u52d5\u614b  \u57f7\u884c  $ snap list  \u986f\u793a  Name         Version               Developer\nhello-world  6.0                   canonical\nubuntu-core  16.04+20160419.20-55  canonical  \u5728\u4e00\u6b21\u57f7\u884c  $ sudo snap install hello-world  \u986f\u793a  error: can't install  hello-world : snap  hello-world  already installed",
            "title": "\u6307\u4ee4\u7bc4\u4f8b"
        },
        {
            "location": "/content/command/snap-install/#_2",
            "text": "\u57f7\u884c  $ whereis hello-world  \u986f\u793a  hello-world: /snap/bin/hello-world.sh /snap/bin/hello-world.usehw /snap/bin/hello-world.env /snap/bin/hello-world.echo /snap/bin/hello-world.showdev /snap/bin/hello-world.evil",
            "title": "\u63a2\u7d22"
        },
        {
            "location": "/content/command/snap-install/#snap",
            "text": "\u57f7\u884c  ls /snap/ -1  \u986f\u793a  bin\nhello-world\nubuntu-core",
            "title": "\u63a2\u7d22 /snap/"
        },
        {
            "location": "/content/command/snap-install/#snapbin",
            "text": "\u57f7\u884c  $ tree /snap/bin  \u986f\u793a  /snap/bin\n\u251c\u2500\u2500 hello-world.echo\n\u251c\u2500\u2500 hello-world.env\n\u251c\u2500\u2500 hello-world.evil\n\u251c\u2500\u2500 hello-world.sh\n\u251c\u2500\u2500 hello-world.showdev\n\u2514\u2500\u2500 hello-world.usehw\n\n0 directories, 6 files  \u57f7\u884c  $ hello-world.echo  \u986f\u793a  Hello World!",
            "title": "\u63a2\u7d22 /snap/bin"
        },
        {
            "location": "/content/command/snap-install/#etcprofiledapps-bin-pathsh",
            "text": "\u57f7\u884c  $ cat /etc/profile.d/apps-bin-path.sh  \u986f\u793a  # Expand the $PATH to include /snaps/bin which is what snappy applications\n# use\nPATH=$PATH:/snap/bin",
            "title": "\u63a2\u7d22 /etc/profile.d/apps-bin-path.sh"
        },
        {
            "location": "/content/command/snap-install/#snaphello-world",
            "text": "\u57f7\u884c  $ tree /snap/hello-world/  \u986f\u793a  /snap/hello-world/\n\u251c\u2500\u2500 25\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 bin\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 echo\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 env\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 evil\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 sh\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 showdev\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 usehw\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 meta\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 icon.png\n\u2502\u00a0\u00a0     \u2514\u2500\u2500 snap.yaml\n\u2514\u2500\u2500 current -  25\n\n4 directories, 8 files",
            "title": "\u63a2\u7d22 /snap/hello-world"
        },
        {
            "location": "/content/command/snap-install/#snaphello-worldcurrentmetasnapyaml",
            "text": "\u57f7\u884c  $ cat /snap/hello-world/current/meta/snap.yaml  \u986f\u793a  name: hello-world\nversion: 6.0\narchitectures: [ all ]\nsummary: The hello-world of snappy apps\ndescription: This is a simple hello world example that includes a\n  interesting apps to play with snappy and the sandboxing in snappy\n    hello-world.echo - simply output text\n    hello-world.env - dump the env of commands run inside app sandbox\n    hello-world.evil - show how snappy prevents apps to do stuff outside their sandbox\n    hello-world.showdev - depreated - will be replaced with skills\n    hello-world.usehw - depreated - will be replaced with skills example\n    hello-world.sh - enter interactive shell that runs in app sandbox\napps:\n echo:\n   command: bin/echo\n env:\n   command: bin/env\n evil:\n   command: bin/evil\n showdev:\n   command: bin/showdev\n usehw:\n   command: bin/usehw\n sh:\n   command: bin/sh",
            "title": "\u63a2\u7d22 /snap/hello-world/current/meta/snap.yaml"
        },
        {
            "location": "/content/command/snap-install/#snaphello-worldcurrentbinecho",
            "text": "\u57f7\u884c  $ cat /snap/hello-world/current/bin/echo  \u986f\u793a  #!/bin/sh\n\necho  Hello World!",
            "title": "\u63a2\u7d22 /snap/hello-world/current/bin/echo"
        },
        {
            "location": "/content/command/snap-install/#snaphello-worldcurrentbinenv",
            "text": "\u57f7\u884c  $ cat /snap/hello-world/current/bin/env  \u986f\u793a  #!/bin/bash\n\n/usr/bin/env",
            "title": "\u63a2\u7d22 /snap/hello-world/current/bin/env"
        },
        {
            "location": "/content/command/snap-install/#snaphello-worldcurrentbinevil",
            "text": "\u57f7\u884c  $ cat /snap/hello-world/current/bin/evil  \u986f\u793a  #!/bin/sh\n\nset -e\necho  Hello Evil World! \n\necho  This example demonstrates the app confinement \necho  You should see a permission denied error next \n\necho  Haha    /var/tmp/myevil.txt\n\necho  If you see this line the confinement is not working correctly, please file a bug",
            "title": "\u63a2\u7d22 /snap/hello-world/current/bin/evil"
        },
        {
            "location": "/content/command/snap-install/#snaphello-worldcurrentbinsh",
            "text": "\u57f7\u884c  $ cat /snap/hello-world/current/bin/sh  \u986f\u793a  #!/bin/bash\n\ncat  EOM\nLaunching a shell inside the default app confinement. Navigate to your\napp-specific directories with:\n\n  $ cd \\$SNAP\n  $ cd \\$SNAP_DATA\n  $ cd \\$SNAP_USER_DATA\n\nEOM\n\n/bin/bash --norc -i",
            "title": "\u63a2\u7d22 /snap/hello-world/current/bin/sh"
        },
        {
            "location": "/content/command/snap-install/#snaphello-worldcurrentbinshowdev",
            "text": "\u57f7\u884c  $ cat /snap/hello-world/current/bin/showdev  \u986f\u793a  #!/bin/sh\n\n# show the view on the /dev/ system of an app\n\nargs=$@\ntest -z  $args    findargs=/dev/\ntest -n  $args    findargs=$args\n\necho  Hello /dev World: Here is what I can see with 'find $findargs' \n\nfind $findargs\n\nAPPNAME=`echo $SNAP | cut -f 3 -d '/'`\necho  \necho  Here is hardware that has been assigned to me ($APPNAME): \nudevadm trigger --verbose --dry-run --tag-match=snappy-assign --property-match=SNAPPY_APP= $APPNAME",
            "title": "\u63a2\u7d22 /snap/hello-world/current/bin/showdev"
        },
        {
            "location": "/content/command/snap-install/#snaphello-worldcurrentbinshowdev_1",
            "text": "\u57f7\u884c  $ cat /snap/hello-world/current/bin/showdev  \u986f\u793a  #!/bin/sh\n\nset -e\necho  Hello hw-assign world! \n\necho  This example demonstrates the app confinement for assigned hardware \necho  \n\nAPPNAME=`echo $SNAP | cut -f 3 -d '/'`\nif [ -z  $APPNAME  ]; then\n    echo  Could not determine application name. \n    exit 1\nfi\nhw=`udevadm trigger --verbose --dry-run --tag-match=snappy-assign --property-match=SNAPPY_APP= $APPNAME  | grep kmsg || true`\nif [ -z  $hw  ]; then\n    echo  No hardware is assigned for this device. Try adding /dev/kmsg with: \n    echo    $ sudo snappy hw-assign $APPNAME /dev/kmsg \nelse\n    echo  Good, '$hw' is assigned to us. \n    echo  Now try to read a line from /dev/kmsg: \n    head -1 /dev/kmsg\n    echo  \n    echo  It worked! \nfi",
            "title": "\u63a2\u7d22 /snap/hello-world/current/bin/showdev"
        },
        {
            "location": "/content/command/snap-install/#varsnap",
            "text": "\u57f7\u884c  $ tree /var/snap  \u986f\u793a  /var/snap\n\u251c\u2500\u2500 hello-world\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 25\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 current -  25\n\u2514\u2500\u2500 ubuntu-core\n    \u251c\u2500\u2500 109\n    \u2514\u2500\u2500 current -  109\n\n6 directories, 0 files",
            "title": "\u63a2\u7d22 /var/snap"
        },
        {
            "location": "/content/command/snap-install/#varlibsnapd",
            "text": "\u57f7\u884c  $ tree /var/lib/snapd/  \u986f\u793a  /var/lib/snapd/\n\u251c\u2500\u2500 apparmor\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 additional\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 profiles\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 snap.hello-world.echo\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 snap.hello-world.env\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 snap.hello-world.evil\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 snap.hello-world.sh\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 snap.hello-world.showdev\n\u2502\u00a0\u00a0     \u2514\u2500\u2500 snap.hello-world.usehw\n\u251c\u2500\u2500 assertions\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 asserts-v0\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 private-keys-v0\n\u251c\u2500\u2500 desktop\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 applications\n\u251c\u2500\u2500 lib\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 gl\n\u251c\u2500\u2500 seccomp\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 profiles\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 snap.hello-world.echo\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 snap.hello-world.env\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 snap.hello-world.evil\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 snap.hello-world.sh\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 snap.hello-world.showdev\n\u2502\u00a0\u00a0     \u2514\u2500\u2500 snap.hello-world.usehw\n\u251c\u2500\u2500 snaps\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 hello-world_25.snap\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 ubuntu-core_109.snap\n\u2514\u2500\u2500 state.json\n\n13 directories, 15 files",
            "title": "\u63a2\u7d22 /var/lib/snapd/"
        },
        {
            "location": "/content/command/snap-install/#varlibsnapdstatejson",
            "text": "\u57f7\u884c  $ sudo less /var/lib/snapd/state.json",
            "title": "\u63a2\u7d22 /var/lib/snapd/state.json"
        },
        {
            "location": "/content/command/snap-install/#varlibsnapdapparmorprofilessnaphello-worldecho",
            "text": "\u57f7\u884c  $ less /var/lib/snapd/apparmor/profiles/snap.hello-world.echo  \u986f\u793a  # Description: Allows access to app-specific directories and basic runtime\n# Usage: common\n\n# vim:syntax=apparmor\n\n#include  tunables/global \n\n@{APP_NAME}= echo \n@{SNAP_NAME}= hello-world \n@{SNAP_REVISION}= 25 \n@{INSTALL_DIR}= /snap \n\nprofile  snap.hello-world.echo  (attach_disconnected) {\n  #include  abstractions/base \n  #include  abstractions/consoles \n  #include  abstractions/openssl \n\n  # for python apps/services\n  #include  abstractions/python \n  /usr/bin/python{,2,2.[0-9]*,3,3.[0-9]*} ixr,\n  deny /usr/lib/python3*/{,**/}__pycache__/ w,              # noisy\n  deny /usr/lib/python3*/{,**/}__pycache__/**.pyc.[0-9]* w,\n\n  # for perl apps/services\n  #include  abstractions/perl \n  /usr/bin/perl{,5*} ixr,\n\n# TODO: we must remove these since things like 'container-management' will be\n# broken if we have explicit denies. However, the development tools need to be\n# clear that these can't be allowed.\n  # Explicitly deny ptrace for now since it can be abused to break out of the\n  # seccomp sandbox. https://lkml.org/lkml/2015/3/18/823\n#  audit deny ptrace (trace),\n\n  # Explicitly deny capability mknod so apps can't create devices\n#  audit deny capability mknod,\n\n  # Explicitly deny mount, remount and umount so apps can't modify things in\n  # their namespace\n#  audit deny mount,\n#  audit deny remount,\n#  audit deny umount,\n\n  # for bash 'binaries' (do *not* use abstractions/bash)\n  # user-specific bash files\n  /bin/bash ixr,\n  /bin/dash ixr,\n  /etc/bash.bashrc r,\n  /etc/{passwd,group,nsswitch.conf} r,  # very common\n  /etc/libnl-3/{classid,pktloc} r,      # apps that use libnl\n  /var/lib/extrausers/{passwd,group} r,\n  /etc/profile r,\n  /usr/share/terminfo/** r,\n  /etc/inputrc r,\n  deny @{HOME}/.inputrc r,\n  # Common utilities for shell scripts\n  /{,usr/}bin/{,g,m}awk ixr,\n  /{,usr/}bin/basename ixr,\n  /{,usr/}bin/bunzip2 ixr,\n  /{,usr/}bin/bzcat ixr,\n  /{,usr/}bin/bzdiff ixr,\n  /{,usr/}bin/bzgrep ixr,\n  /{,usr/}bin/bzip2 ixr,\n  /{,usr/}bin/cat ixr,\n  /{,usr/}bin/chmod ixr,\n  /{,usr/}bin/cmp ixr,\n  /{,usr/}bin/cp ixr,\n  /{,usr/}bin/cpio ixr,\n  /{,usr/}bin/cut ixr,\n  /{,usr/}bin/date ixr,\n  /{,usr/}bin/dd ixr,\n  /{,usr/}bin/diff{,3} ixr,\n  /{,usr/}bin/dir ixr,\n  /{,usr/}bin/dirname ixr,\n  /{,usr/}bin/echo ixr,\n  /{,usr/}bin/{,e,f,r}grep ixr,\n  /{,usr/}bin/env ixr,\n  /{,usr/}bin/expr ixr,\n  /{,usr/}bin/false ixr,\n  /{,usr/}bin/find ixr,\n  /{,usr/}bin/fmt ixr,\n  /{,usr/}bin/getopt ixr,\n  /{,usr/}bin/groups ixr,\n  /{,usr/}bin/gzip ixr,\n  /{,usr/}bin/head ixr,\n  /{,usr/}bin/hostname ixr,\n  /{,usr/}bin/id ixr,\n  /{,usr/}bin/igawk ixr,\n  /{,usr/}bin/kill ixr,\n  /{,usr/}bin/ldd ixr,\n  /{,usr/}bin/less{,file,pipe} ixr,\n  /{,usr/}bin/ln ixr,\n  /{,usr/}bin/line ixr,\n  /{,usr/}bin/link ixr,\n  /{,usr/}bin/logger ixr,\n  /{,usr/}bin/ls ixr,\n  /{,usr/}bin/md5sum ixr,\n  /{,usr/}bin/mkdir ixr,\n  /{,usr/}bin/mktemp ixr,\n  /{,usr/}bin/more ixr,\n  /{,usr/}bin/mv ixr,\n  /{,usr/}bin/openssl ixr, # may cause harmless capability block_suspend denial\n  /{,usr/}bin/pgrep ixr,\n  /{,usr/}bin/printenv ixr,\n  /{,usr/}bin/printf ixr,\n  /{,usr/}bin/ps ixr,\n  /{,usr/}bin/pwd ixr,\n  /{,usr/}bin/readlink ixr,\n  /{,usr/}bin/realpath ixr,\n  /{,usr/}bin/rev ixr,\n  /{,usr/}bin/rm ixr,\n  /{,usr/}bin/rmdir ixr,\n  /{,usr/}bin/sed ixr,\n  /{,usr/}bin/seq ixr,\n  /{,usr/}bin/sleep ixr,\n  /{,usr/}bin/sort ixr,\n  /{,usr/}bin/stat ixr,\n  /{,usr/}bin/tac ixr,\n  /{,usr/}bin/tail ixr,\n  /{,usr/}bin/tar ixr,\n  /{,usr/}bin/tee ixr,\n  /{,usr/}bin/test ixr,\n  /{,usr/}bin/tempfile ixr,\n  /{,usr/}bin/tset ixr,\n  /{,usr/}bin/touch ixr,\n  /{,usr/}bin/tr ixr,\n  /{,usr/}bin/true ixr,\n  /{,usr/}bin/uname ixr,\n  /{,usr/}bin/uniq ixr,\n  /{,usr/}bin/unlink ixr,\n  /{,usr/}bin/unxz ixr,\n  /{,usr/}bin/unzip ixr,\n  /{,usr/}bin/vdir ixr,\n  /{,usr/}bin/wc ixr,\n  /{,usr/}bin/which ixr,\n  /{,usr/}bin/xargs ixr,\n  /{,usr/}bin/xz ixr,\n  /{,usr/}bin/yes ixr,\n  /{,usr/}bin/zcat ixr,\n  /{,usr/}bin/z{,e,f}grep ixr,\n  /{,usr/}bin/zip ixr,\n  /{,usr/}bin/zipgrep ixr,\n\n  # uptime\n  /{,usr/}bin/uptime ixr,\n  @{PROC}/uptime r,\n  @{PROC}/loadavg r,\n  # this is an information leak\n  deny /{,var/}run/utmp r,\n\n  # java\n  @{PROC}/@{pid}/ r,\n  @{PROC}/@{pid}/fd/ r,\n  owner @{PROC}/@{pid}/auxv r,\n  @{PROC}/@{pid}/version_signature r,\n  @{PROC}/@{pid}/version r,\n  @{PROC}/sys/vm/zone_reclaim_mode r,\n  /etc/lsb-release r,\n  /sys/devices/**/read_ahead_kb r,\n  /sys/devices/system/cpu/** r,\n  /sys/kernel/mm/transparent_hugepage/enabled r,\n  /sys/kernel/mm/transparent_hugepage/defrag r,\n  # NOTE: this leaks running process and java seems to want it, but operates\n  # ok without it. Deny for now to silence the denial but we could allow\n  # owner match until AppArmor kernel var is available to solve this properly.\n  deny @{PROC}/@{pid}/cmdline r,\n  #owner @{PROC}/@{pid}/cmdline r,\n\n  # Miscellaneous accesses\n  /etc/mime.types r,\n  @{PROC}/ r,\n  /etc/{,writable/}hostname r,\n  /etc/{,writable/}localtime r,\n  /etc/{,writable/}timezone r,\n  @{PROC}/@{pid}/stat r,\n  @{PROC}/@{pid}/statm r,\n  @{PROC}/@{pid}/status r,\n  @{PROC}/sys/kernel/hostname r,\n  @{PROC}/sys/kernel/osrelease r,\n  @{PROC}/sys/fs/file-max r,\n  @{PROC}/sys/kernel/pid_max r,\n  @{PROC}/sys/kernel/random/uuid r,\n\n  # Eases hardware assignment (doesn't give anything away)\n  /etc/udev/udev.conf r,\n  /sys/       r,\n  /sys/bus/   r,\n  /sys/class/ r,\n\n  # this leaks interface names and stats, but not in a way that is traceable\n  # to the user/device\n  @{PROC}/net/dev r,\n\n  # Read-only for the install directory\n  @{INSTALL_DIR}/@{SNAP_NAME}/                   r,\n  @{INSTALL_DIR}/@{SNAP_NAME}/@{SNAP_REVISION}/    r,\n  @{INSTALL_DIR}/@{SNAP_NAME}/@{SNAP_REVISION}/**  mrklix,\n\n  # Don't log noisy python denials (see LP: #1496895 for more details)\n  deny @{INSTALL_DIR}/@{SNAP_NAME}/**/__pycache__/             w,\n  deny @{INSTALL_DIR}/@{SNAP_NAME}/**/__pycache__/*.pyc.[0-9]* w,\n\n  # Read-only home area for other versions\n  owner @{HOME}/snap/@{SNAP_NAME}/                  r,\n  owner @{HOME}/snap/@{SNAP_NAME}/**                mrkix,\n\n  # Writable home area for this version.\n  owner @{HOME}/snap/@{SNAP_NAME}/@{SNAP_REVISION}/** wl,\n\n  # Read-only system area for other versions\n  /var/snap/@{SNAP_NAME}/   r,\n  /var/snap/@{SNAP_NAME}/** mrkix,\n\n  # Writable system area only for this version\n  /var/snap/@{SNAP_NAME}/@{SNAP_REVISION}/** wl,\n\n  # The ubuntu-core-launcher creates an app-specific private restricted /tmp\n  # and will fail to launch the app if something goes wrong. As such, we can\n  # simply allow full access to /tmp.\n  /tmp/   r,\n  /tmp/** mrwlkix,\n\n  # Also do the same for shm\n  /{dev,run}/shm/snap/@{SNAP_NAME}/                  r,\n  /{dev,run}/shm/snap/@{SNAP_NAME}/**                rk,\n  /{dev,run}/shm/snap/@{SNAP_NAME}/@{SNAP_REVISION}/   r,\n  /{dev,run}/shm/snap/@{SNAP_NAME}/@{SNAP_REVISION}/** mrwlkix,\n\n  # Allow apps from the same package to communicate with each other via an\n  # abstract or anonymous socket\n  unix peer=(label=snap.@{SNAP_NAME}.*),\n\n  # Allow apps from the same package to signal each other via signals\n  signal peer=snap.@{SNAP_NAME}.*,\n\n  # for 'udevadm trigger --verbose --dry-run --tag-match=snappy-assign'\n  /{,s}bin/udevadm ixr,\n  /etc/udev/udev.conf r,\n  /{,var/}run/udev/tags/snappy-assign/ r,\n  @{PROC}/cmdline r,\n  /sys/devices/**/uevent r,\n\n  # LP: #1447237: adding '--property-match=SNAPPY_APP= pkgname ' to the above\n  # requires:\n  #   /run/udev/data/* r,\n  # but that reveals too much about the system and cannot be granted to apps\n  # by default at this time.\n\n  # For convenience, allow apps to see what is in /dev even though cgroups\n  # will block most access\n  /dev/ r,\n  /dev/**/ r,\n\n  # Do the same with /sys/devices and /sys/class to help people using hw-assign\n  /sys/devices/ r,\n  /sys/devices/**/ r,\n  /sys/class/ r,\n  /sys/class/**/ r,\n\n\n}",
            "title": "\u63a2\u7d22 /var/lib/snapd/apparmor/profiles/snap.hello-world.echo"
        },
        {
            "location": "/content/command/snap-install/#varlibsnapdseccompprofilessnaphello-worldecho",
            "text": "\u57f7\u884c  $ less /var/lib/snapd/seccomp/profiles/snap.hello-world.echo  \u986f\u793a  # Description: Allows access to app-specific directories and basic runtime\n# Usage: common\n#\n\n# Dangerous syscalls that we don't ever want to allow\n\n# kexec\ndeny kexec_load\n\n# kernel modules\ndeny create_module\ndeny init_module\ndeny finit_module\ndeny delete_module\n\n# these have a history of vulnerabilities, are not widely used, and\n# open_by_handle_at has been used to break out of docker containers by brute\n# forcing the handle value: http://stealth.openwall.net/xSports/shocker.c\ndeny name_to_handle_at\ndeny open_by_handle_at\n\n# Explicitly deny ptrace since it can be abused to break out of the seccomp\n# sandbox\ndeny ptrace\n\n# Explicitly deny capability mknod so apps can't create devices\ndeny mknod\ndeny mknodat\n\n# Explicitly deny (u)mount so apps can't change mounts in their namespace\ndeny mount\ndeny umount\ndeny umount2\n\n# Explicitly deny kernel keyring access\ndeny add_key\ndeny keyctl\ndeny request_key\n\n# end dangerous syscalls\n\naccess\nfaccessat\n\nalarm\nbrk\n\n# ARM private syscalls\nbreakpoint\ncacheflush\nset_tls\nusr26\nusr32\n\ncapget\n# AppArmor mediates capabilities, so allow capset (useful for apps that for\n# example want to drop capabilities)\ncapset\n\nchdir\nfchdir\n\n# We can't effectively block file perms due to open() with O_CREAT, so allow\n# chmod until we have syscall arg filtering (LP: #1446748)\nchmod\nfchmod\nfchmodat\n\n# snappy doesn't currently support per-app UID/GIDs so don't allow chown. To\n# properly support chown, we need to have syscall arg filtering (LP: #1446748)\n# and per-app UID/GIDs.\n#chown\n#chown32\n#fchown\n#fchown32\n#fchownat\n#lchown\n#lchown32\n\nclock_getres\nclock_gettime\nclock_nanosleep\nclone\nclose\ncreat\ndup\ndup2\ndup3\nepoll_create\nepoll_create1\nepoll_ctl\nepoll_ctl_old\nepoll_pwait\nepoll_wait\nepoll_wait_old\neventfd\neventfd2\nexecve\nexecveat\n_exit\nexit\nexit_group\nfallocate\n\n# requires CAP_SYS_ADMIN\n#fanotify_init\n#fanotify_mark\n\nfcntl\nfcntl64\nflock\nfork\nftime\nfutex\nget_mempolicy\nget_robust_list\nget_thread_area\ngetcpu\ngetcwd\ngetdents\ngetdents64\ngetegid\ngetegid32\ngeteuid\ngeteuid32\ngetgid\ngetgid32\ngetgroups\ngetgroups32\ngetitimer\ngetpgid\ngetpgrp\ngetpid\ngetppid\ngetpriority\ngetrandom\ngetresgid\ngetresgid32\ngetresuid\ngetresuid32\n\ngetrlimit\nugetrlimit\n\ngetrusage\ngetsid\ngettid\ngettimeofday\ngetuid\ngetuid32\n\ngetxattr\nfgetxattr\nlgetxattr\n\ninotify_add_watch\ninotify_init\ninotify_init1\ninotify_rm_watch\n\n# Needed by shell\nioctl\n\nio_cancel\nio_destroy\nio_getevents\nio_setup\nio_submit\nioprio_get\n# affects other processes, requires CAP_SYS_ADMIN. Potentially allow with\n# syscall filtering of (at least) IOPRIO_WHO_USER (LP: #1446748)\n#ioprio_set\n\nipc\nkill\nlink\nlinkat\n\nlistxattr\nllistxattr\nflistxattr\n\nlseek\nllseek\n_llseek\nlstat\nlstat64\n\nmadvise\nfadvise64\nfadvise64_64\narm_fadvise64_64\n\nmbarrier\nmbind\nmincore\nmkdir\nmkdirat\nmlock\nmlockall\nmmap\nmmap2\nmprotect\n\n# LP: #1448184 - these aren't currently mediated by AppArmor. Deny for now\n#mq_getsetattr\n#mq_notify\n#mq_open\n#mq_timedreceive\n#mq_timedsend\n#mq_unlink\n\nmremap\nmsgctl\nmsgget\nmsgrcv\nmsgsnd\nmsync\nmunlock\nmunlockall\nmunmap\n\nnanosleep\n\n# LP: #1446748 - deny until we have syscall arg filtering. Alternatively, set\n# RLIMIT_NICE hard limit for apps, launch them under an appropriate nice value\n# and allow this call\n#nice\n\n# LP: #1446748 - support syscall arg filtering for mode_t with O_CREAT\nopen\n\nopenat\npause\npipe\npipe2\npoll\nppoll\n\n# LP: #1446748 - support syscall arg filtering\nprctl\narch_prctl\n\nread\npread\npread64\npreadv\nreadv\n\nreadahead\nreaddir\nreadlink\nreadlinkat\nremap_file_pages\n\nremovexattr\nfremovexattr\nlremovexattr\n\nrename\nrenameat\nrenameat2\n\n# The man page says this shouldn't be needed, but we've seen denials for it\n# in the wild\nrestart_syscall\n\nrmdir\nrt_sigaction\nrt_sigpending\nrt_sigprocmask\nrt_sigqueueinfo\nrt_sigreturn\nrt_sigsuspend\nrt_sigtimedwait\nrt_tgsigqueueinfo\nsched_getaffinity\nsched_getattr\nsched_getparam\nsched_get_priority_max\nsched_get_priority_min\nsched_getscheduler\nsched_rr_get_interval\n# LP: #1446748 - when support syscall arg filtering, enforce pid_t is 0 so the\n# app may only change its own scheduler\nsched_setscheduler\n\nsched_yield\n\nselect\n_newselect\npselect\npselect6\n\nsemctl\nsemget\nsemop\nsemtimedop\nsendfile\nsendfile64\n\n# While we don't yet have seccomp arg filtering (LP: #1446748), we must allow\n# these because the launcher drops privileges after seccomp_load(). Eventually\n# we will only allow dropping to particular UIDs. For now, we mediate this with\n# AppArmor\nsetgid\nsetgid32\nsetregid\nsetregid32\nsetresgid\nsetresgid32\nsetresuid\nsetresuid32\nsetreuid\nsetreuid32\nsetuid\nsetuid32\n#setgroups\n#setgroups32\n\n# These break isolation but are common and can't be mediated at the seccomp\n# level with arg filtering\nsetpgid\nsetpgrp\n\nset_thread_area\nsetitimer\n\n# apps don't have CAP_SYS_RESOURCE so these can't be abused to raise the hard\n# limits\nsetrlimit\nprlimit64\n\nset_mempolicy\nset_robust_list\nsetsid\nset_tid_address\n\nsetxattr\nfsetxattr\nlsetxattr\n\nshmat\nshmctl\nshmdt\nshmget\nsignal\nsigaction\nsignalfd\nsignalfd4\nsigaltstack\nsigpending\nsigprocmask\nsigreturn\nsigsuspend\nsigtimedwait\nsigwaitinfo\n\n# needed by ls -l\nsocket\nconnect\n\n# Per man page, on Linux this is limited to only AF_UNIX so it is ok to have\n# in the default template\nsocketpair\n\nsplice\n\nstat\nstat64\nfstat\nfstat64\nfstatat64\nlstat\nnewfstatat\noldfstat\noldlstat\noldstat\n\nstatfs\nstatfs64\nfstatfs\nfstatfs64\nstatvfs\nfstatvfs\nustat\n\nsymlink\nsymlinkat\n\nsync\nsync_file_range\nsync_file_range2\narm_sync_file_range\nfdatasync\nfsync\nsyncfs\nsysinfo\nsyslog\ntee\ntgkill\ntime\ntimer_create\ntimer_delete\ntimer_getoverrun\ntimer_gettime\ntimer_settime\ntimerfd\ntimerfd_create\ntimerfd_gettime\ntimerfd_settime\ntimes\ntkill\n\ntruncate\ntruncate64\nftruncate\nftruncate64\n\numask\n\nuname\nolduname\noldolduname\n\nunlink\nunlinkat\n\nutime\nutimensat\nutimes\nfutimesat\n\nvfork\nvmsplice\nwait4\noldwait4\nwaitpid\nwaitid\n\nwrite\nwritev\npwrite\npwrite64\npwritev",
            "title": "\u63a2\u7d22 /var/lib/snapd/seccomp/profiles/snap.hello-world.echo"
        }
    ]
}